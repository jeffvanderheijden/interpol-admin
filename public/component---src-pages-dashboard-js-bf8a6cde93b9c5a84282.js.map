{"version":3,"file":"component---src-pages-dashboard-js-bf8a6cde93b9c5a84282.js","mappings":"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","sources":["webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Trashcan.js","webpack://admin-panel/./src/helpers/icons/Camera.js","webpack://admin-panel/./src/components/Modal/EditGroup.js","webpack://admin-panel/./src/helpers/icons/Close.js","webpack://admin-panel/./src/helpers/icons/Check.js","webpack://admin-panel/./src/helpers/icons/Copy.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/components/Modal/NewGroup.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters,\n    setOpenModal\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { setOpenModal(true) }}>Groep toevoegen</button>\n            <button className={\"logout\"} onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Trashcan = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} fill=\"red\" height=\"18\" viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M767 336H233q-12 0-21 9t-9 21l38 505q1 13 12 21.5t30 8.5h434q18 0 29-8.5t13-21.5l38-505q0-12-9-21t-21-9zM344 841q-10 0-18-9t-8-21l-26-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5l18 386q0 12-7.5 21t-18.5 9zm182-31q0 13-7.5 22t-18.5 9-18.5-9-7.5-22l-4-385q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm156 1q0 12-8 21t-18 9q-11 0-18.5-9t-7.5-21l18-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm101-605l-179-30q-12-2-15-15l-8-33q-4-20-14-26-6-3-22-3h-90q-16 0-23 3-10 6-13 26l-8 33q-2 13-15 15l-179 30q-19 3-31.5 14.5T173 249v28q0 9 6.5 15t15.5 6h610q9 0 15.5-6t6.5-15v-28q0-17-12.5-28.5T783 206z\"/></svg>\n    )\n}\n\nexport default Trashcan;","import React from 'react';\n\nconst Camera = () => {\n    return (\n        <svg height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"camera\">\n                <path clipRule=\"evenodd\" d=\"M16,10.001c-4.419,0-8,3.581-8,8c0,4.418,3.581,8,8,8 c4.418,0,8-3.582,8-8C24,13.583,20.418,10.001,16,10.001z M20.555,21.906c-2.156,2.516-5.943,2.807-8.459,0.65 c-2.517-2.156-2.807-5.944-0.65-8.459c2.155-2.517,5.943-2.807,8.459-0.65C22.42,15.602,22.711,19.391,20.555,21.906z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M16,14.001c-2.209,0-3.999,1.791-4,3.999v0.002 c0,0.275,0.224,0.5,0.5,0.5s0.5-0.225,0.5-0.5V18c0.001-1.656,1.343-2.999,3-2.999c0.276,0,0.5-0.224,0.5-0.5 S16.276,14.001,16,14.001z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M29.492,9.042l-4.334-0.723l-1.373-3.434 C23.326,3.74,22.232,3,21,3H11C9.768,3,8.674,3.74,8.214,4.886L6.842,8.319L2.509,9.042C1.055,9.283,0,10.527,0,12v15 c0,1.654,1.346,3,3,3h26c1.654,0,3-1.346,3-3V12C32,10.527,30.945,9.283,29.492,9.042z M30,27c0,0.553-0.447,1-1,1H3 c-0.553,0-1-0.447-1-1V12c0-0.489,0.354-0.906,0.836-0.986l5.444-0.907l1.791-4.478C10.224,5.25,10.591,5,11,5h10 c0.408,0,0.775,0.249,0.928,0.629l1.791,4.478l5.445,0.907C29.646,11.094,30,11.511,30,12V27z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport default Camera;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { editGroup, removeStudent } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./EditGroup.css\";\n\nconst EditGroup = ({\n    group,\n    openModal,\n    closeModal,\n    setGroups,\n    setFilteredGroups\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(group.image_url || null); // Set initial image if available\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const newStudentRef = useRef(null);\n\n    // Reset new students when modal opens\n    useEffect(() => {\n        setNewStudents([]);\n    }, [openModal]);\n\n    // Function to initialize the video stream\n    const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    const clearPicture = () => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const removeExistingStudent = (studentNumber, studentName) => {\n        if (window.confirm(`Weet je zeker dat je ${studentName} wilt verwijderen uit deze groep?`)) {\n            // Call the remove student function\n            // Assuming removeStudent is imported from dataLayer\n            removeStudent(studentNumber)\n                .then(() => {\n                    // Remove student from group, refresh data\n                    const fetchData = async () => {\n                        const data = await dataLayer();\n                        setGroups(data);\n                        setFilteredGroups(data);\n                    };\n                    fetchData();\n                })\n                .catch((error) => {\n                    console.error('Error removing student:', error);\n                });\n        }\n    }\n\n    const saveGroupChanges = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        formData.append('group_id', e.target.elements.group_id.value);\n\n        let students = newStudentRef.current.children;\n        students = Array.from(students).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n\n        console.log(students);\n\n        formData.append('students', JSON.stringify([...group.students, ...students]));\n\n        // Updates the group\n        await editGroup(formData)\n            .then(() => {\n                // Update UI instead of reloading the page\n                const fetchData = async () => {\n                    const data = await dataLayer();\n                    setGroups(data);\n                    setFilteredGroups(data);\n                };\n                fetchData();\n                closeModal();\n            })\n            .catch((error) => {\n                console.error('Error updating group:', error);\n            });\n    };\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    // Call getVideoStream when camera is enabled\n    useEffect(() => {\n        if (camera) {\n            getVideoStream();\n        }\n    }, [camera]);\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal === group.id}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"Edit group\"\n        >\n            <div className=\"editGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { saveGroupChanges(e) }}>\n                        <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required />\n                        <input type=\"hidden\" id=\"group_id\" name=\"group_id\" value={group.id} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={image} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" defaultValue={group.name} name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" defaultValue={group.class} name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"editStudents\">\n                            {group.students.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" defaultValue={student.student_number} />\n                                    <input type=\"text\" defaultValue={student.name} />\n                                    <Trashcan className={'trashcan'} onClick={() => { removeExistingStudent(student.student_number, student.name) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <ul className=\"editStudents\" ref={newStudentRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={student.student_number} />\n                                    <input type=\"text\" placeholder={student.name} />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"editButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type=\"submit\">Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default EditGroup;\n","import React from \"react\";\n\nconst Close = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n        </svg>\n    )\n}\n\nexport default Close;","import React from \"react\";\n\nconst Check = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M4 12.6111L8.92308 17.5L20 6.5\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n    )\n}\n\nexport default Check;","import React from \"react\";\n\nconst Copy = ({\n    onClick,\n    className\n}) => { \n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21 8C21 6.34315 19.6569 5 18 5H10C8.34315 5 7 6.34315 7 8V20C7 21.6569 8.34315 23 10 23H18C19.6569 23 21 21.6569 21 20V8ZM19 8C19 7.44772 18.5523 7 18 7H10C9.44772 7 9 7.44772 9 8V20C9 20.5523 9.44772 21 10 21H18C18.5523 21 19 20.5523 19 20V8Z\" fill=\"#0F0F0F\"/>\n            <path d=\"M6 3H16C16.5523 3 17 2.55228 17 2C17 1.44772 16.5523 1 16 1H6C4.34315 1 3 2.34315 3 4V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V4C5 3.44772 5.44772 3 6 3Z\" fill=\"#0F0F0F\"/>\n        </svg>\n    );\n}\n\nexport default Copy;","import React, { useState } from \"react\";\nimport \"./Groups.css\";\nimport EditGroup from \"./../Modal/EditGroup\";\nimport Close from \"./../../helpers/icons/Close\";\nimport Check from \"./../../helpers/icons/Check\";\nimport Copy from  \"./../../helpers/icons/Copy\";\nimport { removeTeam } from \"./../../helpers/data/dataLayer\";\n\nconst Groups = ({\n    groups,\n    setGroups,\n    setFilteredGroups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const closeModal = () => setOpenModal(null);\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n\n    const toggleCode = (event, code) => {\n        if (visibleCodes.includes(code)) {\n            setVisibleCodes(visibleCodes.filter((c) => c !== code));\n        } else {\n            setVisibleCodes([...visibleCodes, code]);\n        }\n        event.stopPropagation();\n    }\n\n    const copyCode = (event, code) => {\n        navigator.clipboard.writeText(code);\n        event.stopPropagation();\n        event.target.closest(\"li\").querySelector('.checkmark').classList.add('show');\n        event.target.closest(\"li\").querySelector('.copy').classList.add('hide');\n        setTimeout(() => {\n            event.target.closest(\"li\").querySelector('.checkmark').classList.remove('show');\n            event.target.closest(\"li\").querySelector('.copy').classList.remove('hide');\n        }, 2000);\n    }\n\n    const removeGroup = (e, group, classTitle, groupId) => {\n        e.stopPropagation();\n        if (window.confirm(`Weet je zeker dat je groep ${group} uit klas ${classTitle} wilt verwijderen?`)) {\n            removeTeam(groupId).then(res => {\n                // Reload the page to show the updated group list\n                setTimeout(() => {\n                    window.location.reload();\n                }, 500);\n            });\n        } else {\n            // Do nothing\n        }\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                </div>\n                <div className=\"challengeKeysHeader\">\n                    <h1>Code</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {groups && groups.length > 0 && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx} onClick={() => { openSpecificModal(group.id) }}>\n                                <section className=\"groupSection\">\n                                    <div className=\"groupImage\">\n                                        {group.image_url && group.image_url !== '' && group.name && ( <img src={`${apiUrl + group.image_url}`} alt={group.name} /> )}\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                        <button className=\"deleteGroup\" onClick={(e) => { removeGroup(e, group.name, group.class, group.id) }}>Verwijder groep</button>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                {group.students.length > 0 && (\n                                    <section className=\"studentsSection\">\n                                        <ul>\n                                            {group.students.map((student, idx) => (\n                                                <li key={idx}>\n                                                    <p>{student.student_number}</p>\n                                                    <p>{student.name}</p>                                        \n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </section>\n                                )}\n                                {/* Challenges */}\n                                {group.challenges.length > 0 && (\n                                    <>\n                                        <section className=\"challengesSection\" >\n                                            <ul>\n                                                {group.challenges.map((challenge, idx) => (\n                                                    <li key={idx}>\n                                                        <h3>{challenge.name}</h3>\n                                                        <div>\n                                                            {challenge.completed ? \n                                                                <span><Check className={'green'} /></span> : \n                                                                <span><Close className={'red'} /></span>\n                                                            }\n                                                        </div>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section>\n\n                                        <section className=\"challengeKeys\">\n                                            <ul key={idx}>\n                                                {group.challenges.map((challenge, idx) => (                                        \n                                                    <li key={idx}>\n                                                        <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'} onClick={(e) => { toggleCode(e, challenge.keycode)}}>{challenge.keycode}</h3>\n                                                        {/* Copy icon, animated when clicked: visual feedback that copy is successful */}\n                                                        <Copy className={'copy'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                        <Check className={'checkmark green hide'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section>\n                                    </>\n                                )}\n                            </li>\n                            <EditGroup \n                                group={group} \n                                openModal={openModal} \n                                closeModal={closeModal} \n                                apiUrl={apiUrl}\n                                setGroups={setGroups}\n                                setFilteredGroups={setFilteredGroups}\n                            />\n                        </>\n                    ))}\n                </ul>                \n            </section>\n        </>\n    );\n}\n\nexport default Groups;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { createTeam } from \"./../../helpers/data/dataLayer\";\nimport \"./NewGroup.css\";\n\nconst NewGroup = ({\n    openModal,\n    closeModal\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([0]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(null);\n    const [teamSuccessfullyCreated, setTeamSuccessfullyCreated] = useState(false);\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const takePhotoRef = useRef(null);\n    const studentsRef = useRef(null);\n\n    const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    // Firefox currently has a bug where the height can't be read from\n                    // the video, so we will make assumptions if this happens.\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    function clearPicture() {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const createTeamInComp = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        let students = studentsRef.current.children;\n        students = Array.from(students).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n        formData.append('students', JSON.stringify(students));\n        \n        const handleCreateTeam = async (formData, setTeamSuccessfullyCreated) => {\n            await createTeam(formData, setTeamSuccessfullyCreated)\n                .then(() => {\n                    // Update the UI instead of reloading the page\n                    window.location.reload();\n                })\n                .catch((error) => {\n                    // Optionally, show an error notification to the user\n                    console.error('Failed to create team:', error);                    \n                });\n        };\n\n        handleCreateTeam(formData, setTeamSuccessfullyCreated);\n    };\n\n    useEffect(() => {\n        camera && getVideoStream();\n    }, [camera]);\n\n    useEffect(() => {\n        setWidth(600);\n    }, []);\n\n    useEffect(() => {\n        if (teamSuccessfullyCreated) {\n            closeModal();\n        }\n    }, [teamSuccessfullyCreated])\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"New group\"\n        >\n            <div className=\"newGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} ref={takePhotoRef} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { createTeamInComp(e) }}>\n                        <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={image} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"addStudents\" ref={studentsRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={\"Studentnummer\"} required />\n                                    <input type=\"text\" placeholder={\"Student naam\"} required />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"addButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type={'submit'}>Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default NewGroup;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\nimport NewGroup from \"../components/Modal/NewGroup\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  \n  const closeModal = () => setOpenModal(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n      const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n      return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (\n    <>\n      {isTeacher && (\n        <main>\n          <Filter\n            filters={filters}\n            setFilters={setFilters}\n            setOpenModal={setOpenModal}\n          />\n          {filteredGroups.length > 0 ? (\n            <Groups \n              groups={filteredGroups} \n              setGroups={setGroups}\n              setFilteredGroups={setFilteredGroups}\n            />\n          ) : (\n            <div className=\"nothingFound\">\n              Geen groepen gevonden.\n            </div>\n          )}\n          <NewGroup \n            openModal={openModal}\n            closeModal={closeModal}\n          />\n        </main>\n      )}\n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["filters","setFilters","setOpenModal","id","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","className","async","response","fetch","method","credentials","ok","Error","status","data","json","console","log","message","navigate","error","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","fill","height","viewBox","xmlns","d","version","width","clipRule","fillRule","group","openModal","setGroups","setFilteredGroups","camera","setCamera","streaming","setStreaming","newStudents","setNewStudents","setWidth","setHeight","image","setImage","image_url","cameraRef","useRef","canvasRef","videoRef","photoRef","newStudentRef","clearPicture","current","context","getContext","fillStyle","fillRect","offsetHeight","offsetWidth","toDataURL","setAttribute","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","addEventListener","play","err","videoHeight","videoWidth","isNaN","getVideoStream","Modal","content","top","left","right","bottom","marginRight","transform","ref","drawImage","preventDefault","takePicture","alt","onSubmit","formData","FormData","append","elements","teamName","klas","toLowerCase","group_id","students","Array","from","map","student","name","querySelector","number","JSON","stringify","editGroup","then","dataLayer","fetchData","catch","saveGroupChanges","required","onKeyDown","src","defaultValue","class","idx","key","student_number","studentNumber","studentName","window","confirm","removeStudent","filter","_","i","stroke","groups","apiUrl","visibleCodes","setVisibleCodes","copyCode","event","code","clipboard","writeText","stopPropagation","closest","classList","add","setTimeout","remove","length","modalName","classTitle","groupId","removeTeam","res","location","reload","removeGroup","challenges","challenge","completed","includes","keycode","c","teamSuccessfullyCreated","setTeamSuccessfullyCreated","takePhotoRef","studentsRef","createTeam","handleCreateTeam","createTeamInComp","filteredGroups","isTeacher","setIsTeacher","checkSession","searchQueryGroup","searchedGroups","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}