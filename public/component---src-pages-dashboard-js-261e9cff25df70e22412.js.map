{"version":3,"file":"component---src-pages-dashboard-js-261e9cff25df70e22412.js","mappings":"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","sources":["webpack://admin-panel/./src/helpers/data/dataLayer.js","webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Eye.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["const api = \"https://api.interpol.sd-lab.nl/api\";\n\nexport const login = async (formData) => {\n    try {\n        const response = await fetch('https://api.interpol.sd-lab.nl/api/create-session', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include' // Ensure cookies are included with the request\n        });\n\n        const responseText = await response.text(); // Read the raw response body as text\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const loginResponse = JSON.parse(responseText); // Parse the response text as JSON\n\n        // Do something with the login response, e.g., handle login success or error\n        if (loginResponse.error) {\n            console.error('Login error:', loginResponse.error);\n            return loginResponse.error;\n        } else {\n            console.log('Login successful:', loginResponse.message);\n            return true;\n        }\n\n    } catch (error) {\n        console.error('Error creating session:', error);\n    }\n}\n\nexport const getStudents = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/students-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getGroups = async () => {\n    try {\n        const response = await fetch(`${api}/groups`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenges = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/challenges-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenge = async (challengeId) => {\n    try {\n        const response = await fetch(`${api}/challenge-by-id?id=${challengeId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const removeStudent = async (studentId) => {\n    try {\n        const response = await fetch(`${api}/remove-student?id=${studentId}`, {\n            method: 'DELETE',\n            credentials: 'include'\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n}\n\nconst dataLayer = () => {\n    let groupsData = [];\n\n    const fetchAllData = async () => {\n        const groups = await getGroups();\n        if (groups.length > 0) {\n            for (const group of groups) {\n                let dataRow = group;\n\n                const students = await getStudents(group.id);\n                dataRow.students = students;\n\n                const challenges = await getChallenges(group.id);\n\n                for (const challenge of challenges) {\n                    await getChallenge(challenge.challenge_id)\n                        .then(data => {\n                            challenge['name'] = data[0].name;\n                            challenge['minimum_points'] = data[0].minimum_points;\n                            challenge['time_limit'] = data[0].time_limit;\n                        }).catch(error => console.error(error));\n                }\n                dataRow.challenges = challenges;\n\n                groupsData.push(dataRow);\n            }\n        } else {\n            console.warn('No groups found.');\n        }\n\n        return groupsData;\n    };\n\n    return fetchAllData();\n}\n\nexport const checkSession = async () => {\n    try {\n        const response = await fetch(`${api}/check-type`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error checking session:', userData.error);\n            return false;\n        }\n\n        // Check if user is logged in as DOCENT\n        return userData === 'DOCENT' ? true : false;\n\n    } catch (error) {\n        console.error('Error checking session:', error);\n        return false;\n    }\n}\n\nexport default dataLayer;","import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Eye = () => {\n    return (        \n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <g>\n                <g>\n                    <path d=\"M221.02,341.304c-49.708,0-103.206-19.44-154.71-56.22C27.808,257.59,4.044,230.351,3.051,229.203\n                        c-4.068-4.697-4.068-11.669,0-16.367c0.993-1.146,24.756-28.387,63.259-55.881c51.505-36.777,105.003-56.219,154.71-56.219\n                        c49.708,0,103.207,19.441,154.71,56.219c38.502,27.494,62.266,54.734,63.259,55.881c4.068,4.697,4.068,11.669,0,16.367\n                        c-0.993,1.146-24.756,28.387-63.259,55.881C324.227,321.863,270.729,341.304,221.02,341.304z M29.638,221.021\n                        c9.61,9.799,27.747,27.03,51.694,44.071c32.83,23.361,83.714,51.212,139.688,51.212s106.859-27.851,139.688-51.212\n                        c23.944-17.038,42.082-34.271,51.694-44.071c-9.609-9.799-27.747-27.03-51.694-44.071\n                        c-32.829-23.362-83.714-51.212-139.688-51.212s-106.858,27.85-139.688,51.212C57.388,193.988,39.25,211.219,29.638,221.021z\"/>\n                </g>\n                <g>\n                    <path d=\"M221.02,298.521c-42.734,0-77.5-34.767-77.5-77.5c0-42.733,34.766-77.5,77.5-77.5c18.794,0,36.924,6.814,51.048,19.188\n                        c5.193,4.549,5.715,12.446,1.166,17.639c-4.549,5.193-12.447,5.714-17.639,1.166c-9.564-8.379-21.844-12.993-34.576-12.993\n                        c-28.949,0-52.5,23.552-52.5,52.5s23.551,52.5,52.5,52.5c28.95,0,52.5-23.552,52.5-52.5c0-6.903,5.597-12.5,12.5-12.5\n                        s12.5,5.597,12.5,12.5C298.521,263.754,263.754,298.521,221.02,298.521z\"/>\n                </g>\n                <g>\n                    <path d=\"M221.02,246.021c-13.785,0-25-11.215-25-25s11.215-25,25-25c13.786,0,25,11.215,25,25S234.806,246.021,221.02,246.021z\"/>\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Eye;","import React, { useState, useEffect } from \"react\";\nimport \"./Groups.css\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Eye from \"./../../helpers/icons/Eye\";\nimport Close from \"./../../helpers/icons/Close\";\n\nconst Groups = ({\n    groups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [newStudents, setNewStudents] = useState([]);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n    const closeModal = () => setOpenModal(null);\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    // Reset new students when modal closes or they the extra input fields are always shown\n    useEffect(() => {\n        setNewStudents([]);\n    },[openModal]);\n\n    const toggleCode = (event, code) => {\n        event.stopPropagation();\n        if (visibleCodes.includes(code)) {\n            setVisibleCodes(visibleCodes.filter((c) => c !== code));\n        } else {\n            setVisibleCodes([...visibleCodes, code]);\n        }\n    }\n\n    const removeStudent = (studentNumber, groupId) => {\n        console.log(studentNumber, groupId);\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                </div>\n                <div className=\"challengeKeysHeader\">\n                    <h1>Code</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {/* Groups */}\n                    {groups && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx}>\n                                <section className=\"groupSection\" onClick={() => { openSpecificModal(group.id) }}>\n                                    <div className=\"groupImage\">\n                                        <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                <section className=\"studentsSection\" onClick={() => { openSpecificModal(group.id) }}>\n                                    <ul>\n                                        {group.students.map((student, idx) => (\n                                            <li key={idx}>\n                                                <p>{student.student_number}</p>\n                                                <p>{student.name}</p>                                        \n                                            </li>\n                                        ))}\n                                    </ul>\n                                </section>\n                                {/* Challenges */}\n                                <section className=\"challengesSection\" onClick={() => { openSpecificModal(group.id) }}>\n                                    {group.challenges.map((challenge, idx) => (\n                                        <ul key={idx}>\n                                            <li>\n                                                <h3>{challenge.name}</h3>\n                                                <div>\n                                                    {challenge.completed ? \n                                                        <span>V</span> : \n                                                        <span>X</span>\n                                                    }\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    ))}\n                                </section>\n                                {/* Challenge keys */}\n                                <section className=\"challengeKeys\">\n                                    {group.challenges.map((challenge, idx) => (\n                                        <ul key={idx}>\n                                            <li>\n                                                <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'}>{challenge.keycode}</h3>\n                                                <Eye onClick={(e) => { toggleCode(e, challenge.keycode) }} />\n                                            </li>\n                                        </ul>\n                                    ))}\n                                </section>\n                            </li>\n                            <ModalComponent \n                                modalIsOpen={openModal === group.id}\n                                afterOpenModal={null}\n                                closeModal={closeModal}\n                                customStyles={customStyles}\n                                contentLabel=\"Edit group\"\n                            >\n                                <div className=\"editGroup\">\n                                    <section className=\"groupSection\">\n                                        <div className=\"groupImage\">\n                                            <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                                        </div>\n                                        <div>\n                                            <input type=\"text\" placeholder={group.name} />\n                                            <input type=\"text\" placeholder={group.class} />\n                                        </div>\n                                    </section>   \n                                    <ul className=\"editStudents\">\n                                        {group.students.map((student, idx) => (\n                                            <li key={idx}>\n                                                <input type=\"number\" placeholder={student.student_number} />   \n                                                <input type=\"text\" placeholder={student.name} />\n                                                <button onClick={() => { removeStudent(student.student_number, group.id) }}>X</button>\n                                            </li>\n                                        ))}\n                                        {newStudents.map((student, idx) => (\n                                            <li key={idx}>\n                                                <input type=\"number\" placeholder={student.student_number} />   \n                                                <input type=\"text\" placeholder={student.name} />\n                                                <button onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }}>X</button>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    <button onClick={() => { setNewStudents([ ...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                                </div>\n                            </ModalComponent>\n                        </>\n                    ))}\n                </ul>                \n            </section>\n        </>\n    );\n}\n\nexport default Groups;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]); \n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n        const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n        return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (    \n    <>\n      {isTeacher && (\n        <main>\n          <Filter \n            filters={filters}\n            setFilters={setFilters}\n          />\n          <Groups\n            groups={filteredGroups}\n          />\n        </main>\n      )}    \n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["api","login","async","response","fetch","method","body","formData","credentials","responseText","text","ok","Error","status","loginResponse","JSON","parse","error","console","log","message","getStudents","groupId","json","getChallenges","getChallenge","challengeId","checkSession","userData","groupsData","groups","getGroups","length","group","dataRow","students","id","challenges","challenge","challenge_id","then","data","name","minimum_points","time_limit","catch","push","warn","fetchAllData","filters","setFilters","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","navigate","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","version","xmlns","viewBox","d","apiUrl","openModal","setOpenModal","newStudents","setNewStudents","visibleCodes","setVisibleCodes","openSpecificModal","modalName","content","top","left","right","bottom","marginRight","transform","className","map","idx","key","src","image_url","alt","class","student","student_number","completed","includes","keycode","event","code","stopPropagation","filter","c","Modal","studentNumber","_","i","setGroups","filteredGroups","setFilteredGroups","isTeacher","setIsTeacher","dataLayer","fetchData","searchQueryGroup","toLowerCase","searchedGroups","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}