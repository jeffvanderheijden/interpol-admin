{"version":3,"file":"component---src-pages-dashboard-js-9b0480b8c24842db3c38.js","mappings":"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","sources":["webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Trashcan.js","webpack://admin-panel/./src/helpers/icons/Camera.js","webpack://admin-panel/./src/components/Modal/EditGroup.js","webpack://admin-panel/./src/components/TimeScoring/TimeScoring.jsx","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/components/Modal/NewGroup.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters,\n    setOpenModal\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { setOpenModal(true) }}>Groep toevoegen</button>\n            <button className={\"logout\"} onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Trashcan = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} fill=\"red\" height=\"18\" viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M767 336H233q-12 0-21 9t-9 21l38 505q1 13 12 21.5t30 8.5h434q18 0 29-8.5t13-21.5l38-505q0-12-9-21t-21-9zM344 841q-10 0-18-9t-8-21l-26-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5l18 386q0 12-7.5 21t-18.5 9zm182-31q0 13-7.5 22t-18.5 9-18.5-9-7.5-22l-4-385q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm156 1q0 12-8 21t-18 9q-11 0-18.5-9t-7.5-21l18-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm101-605l-179-30q-12-2-15-15l-8-33q-4-20-14-26-6-3-22-3h-90q-16 0-23 3-10 6-13 26l-8 33q-2 13-15 15l-179 30q-19 3-31.5 14.5T173 249v28q0 9 6.5 15t15.5 6h610q9 0 15.5-6t6.5-15v-28q0-17-12.5-28.5T783 206z\"/></svg>\n    )\n}\n\nexport default Trashcan;","import React from 'react';\n\nconst Camera = () => {\n    return (\n        <svg height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"camera\">\n                <path clipRule=\"evenodd\" d=\"M16,10.001c-4.419,0-8,3.581-8,8c0,4.418,3.581,8,8,8 c4.418,0,8-3.582,8-8C24,13.583,20.418,10.001,16,10.001z M20.555,21.906c-2.156,2.516-5.943,2.807-8.459,0.65 c-2.517-2.156-2.807-5.944-0.65-8.459c2.155-2.517,5.943-2.807,8.459-0.65C22.42,15.602,22.711,19.391,20.555,21.906z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M16,14.001c-2.209,0-3.999,1.791-4,3.999v0.002 c0,0.275,0.224,0.5,0.5,0.5s0.5-0.225,0.5-0.5V18c0.001-1.656,1.343-2.999,3-2.999c0.276,0,0.5-0.224,0.5-0.5 S16.276,14.001,16,14.001z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M29.492,9.042l-4.334-0.723l-1.373-3.434 C23.326,3.74,22.232,3,21,3H11C9.768,3,8.674,3.74,8.214,4.886L6.842,8.319L2.509,9.042C1.055,9.283,0,10.527,0,12v15 c0,1.654,1.346,3,3,3h26c1.654,0,3-1.346,3-3V12C32,10.527,30.945,9.283,29.492,9.042z M30,27c0,0.553-0.447,1-1,1H3 c-0.553,0-1-0.447-1-1V12c0-0.489,0.354-0.906,0.836-0.986l5.444-0.907l1.791-4.478C10.224,5.25,10.591,5,11,5h10 c0.408,0,0.775,0.249,0.928,0.629l1.791,4.478l5.445,0.907C29.646,11.094,30,11.511,30,12V27z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport default Camera;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { editGroup, removeStudent } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./EditGroup.css\";\n\nconst EditGroup = ({\n    group,\n    openModal,\n    closeModal,\n    setGroups,\n    setFilteredGroups\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(group.image_url || null); // Set initial image if available\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const newStudentsRef = useRef(null);\n    const oldStudentsRef = useRef(null);\n\n    // Reset new students when modal opens\n    useEffect(() => {\n        setNewStudents([]);\n    }, [openModal]);\n\n     const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    // Firefox currently has a bug where the height can't be read from\n                    // the video, so we will make assumptions if this happens.\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    const clearPicture = () => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const removeExistingStudent = (studentNumber, studentName) => {\n        if (window.confirm(`Weet je zeker dat je ${studentName} wilt verwijderen uit deze groep?`)) {\n            // Call the remove student function\n            // Assuming removeStudent is imported from dataLayer\n            removeStudent(studentNumber)\n                .then(() => {\n                    // Remove student from group, refresh data\n                    const fetchData = async () => {\n                        const data = await dataLayer();\n                        setGroups(data);\n                        setFilteredGroups(data);\n                    };\n                    fetchData();\n                    closeModal();\n                })\n                .catch((error) => {\n                    console.error('Error removing student:', error);\n                });\n        }\n    }\n\n    const saveGroupChanges = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        // formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        formData.append('group_id', e.target.elements.group_id.value);\n\n        let oldStudents = oldStudentsRef.current.children;\n        oldStudents = Array.from(oldStudents).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                student_number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n\n        let newStudents = newStudentsRef.current.children;\n        newStudents = Array.from(newStudents).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                student_number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n\n        formData.append('students', JSON.stringify([...oldStudents, ...newStudents]));\n\n        // Updates the group\n        await editGroup(formData)\n            .then(() => {\n                // Update UI instead of reloading the page\n                const fetchData = async () => {\n                    const data = await dataLayer();\n                    setGroups(data);\n                    setFilteredGroups(data);\n                };\n                fetchData();\n                closeModal();\n            })\n            .catch((error) => {\n                console.error('Error updating group:', error);\n            });\n    };\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    // Call getVideoStream when camera is enabled\n    useEffect(() => {\n        if (camera) {\n            getVideoStream();\n        }\n    }, [camera]);\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal === group.id}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"Edit group\"\n        >\n            <div className=\"editGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { saveGroupChanges(e) }}>\n                        {/* <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required /> */}\n                        <input type=\"hidden\" id=\"group_id\" name=\"group_id\" value={group.id} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={`https://api.interpol.sd-lab.nl/${image}`} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" defaultValue={group.name} name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" defaultValue={group.class} name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"editStudents\" ref={oldStudentsRef}>\n                            {group.students.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" defaultValue={student.student_number} />\n                                    <input type=\"text\" defaultValue={student.name} />\n                                    <Trashcan className={'trashcan'} onClick={() => { removeExistingStudent(student.student_number, student.name) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <ul className=\"editStudents\" ref={newStudentsRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={student.student_number} />\n                                    <input type=\"text\" placeholder={student.name} />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"editButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type=\"submit\">Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default EditGroup;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { updateGroupChallenge } from \"../../helpers/data/dataLayer\";\n\n// Converts HH:MM to minutes\nfunction timeToMinutes(timeStr) {\n    const [hours, minutes] = timeStr.split(\":\").map(Number);\n    return hours * 60 + minutes;\n}\n\n// Points formula: 0 if overtime, else scaled by how fast\nfunction calculatePoints(completionTime, allowedTime, maxPoints = 1000) {\n    if (completionTime > allowedTime) return 0;\n    const ratio = 1 - (completionTime / allowedTime);\n    return Math.round(maxPoints * ratio);\n}\n\nconst TimeScoring = ({\n    challenge,\n    group_id\n}) => {\n    const firstRender = useRef(true);\n\n    const [allowedTimeStr, setAllowedTimeStr] = useState(\"00:00\");\n    const [completionTimeStr, setCompletionTimeStr] = useState(\"00:00\");\n\n    const allowedTime = timeToMinutes(allowedTimeStr);\n    const completionTime = timeToMinutes(completionTimeStr);\n    const points = calculatePoints(completionTime, allowedTime, 1000);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n            return; // Skip first run\n        }\n\n        updateGroupChallenge({ group_id, challenge_id: challenge.id, points });\n    }, [allowedTimeStr, completionTimeStr]);\n\n    return (\n        <div key={challenge.id}>\n            <label>\n                Uitdaging duur:\n                <input\n                    type=\"time\"\n                    step=\"60\"\n                    value={allowedTimeStr}\n                    onChange={(e) => setAllowedTimeStr(e.target.value)}\n                />\n            </label>\n\n            <label>\n                Afgerond in:\n                <input\n                    type=\"time\"\n                    step=\"60\"\n                    value={completionTimeStr}\n                    onChange={(e) => setCompletionTimeStr(e.target.value)}\n                />\n            </label>\n\n            <div>\n                {`Score: ${challenge.points ? challenge.points : (points ? points : '0')}`}\n            </div>\n\n            {completionTime > allowedTime && (\n                <p style={{ color: \"red\" }}>Geen punten.</p>\n            )}\n        </div>\n    );\n};\n\nexport default TimeScoring;\n","import React, { useState } from \"react\";\nimport \"./Groups.css\";\nimport EditGroup from \"./../Modal/EditGroup\";\n// import Close from \"./../../helpers/icons/Close\";\n// import Check from \"./../../helpers/icons/Check\";\n// import Copy from  \"./../../helpers/icons/Copy\";\nimport { removeTeam } from \"./../../helpers/data/dataLayer\";\nimport TimeScoring from \"../TimeScoring/TimeScoring\";\n\nconst Groups = ({\n    groups,\n    setGroups,\n    setFilteredGroups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const closeModal = () => setOpenModal(null);\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n\n    const toggleCode = (event, code) => {\n        if (visibleCodes.includes(code)) {\n            setVisibleCodes(visibleCodes.filter((c) => c !== code));\n        } else {\n            setVisibleCodes([...visibleCodes, code]);\n        }\n        event.stopPropagation();\n    }\n\n    const copyCode = (event, code) => {\n        navigator.clipboard.writeText(code);\n        event.stopPropagation();\n        event.target.closest(\"li\").querySelector('.checkmark').classList.add('show');\n        event.target.closest(\"li\").querySelector('.copy').classList.add('hide');\n        setTimeout(() => {\n            event.target.closest(\"li\").querySelector('.checkmark').classList.remove('show');\n            event.target.closest(\"li\").querySelector('.copy').classList.remove('hide');\n        }, 2000);\n    }\n\n    const removeGroup = (e, group, classTitle, groupId) => {\n        e.stopPropagation();\n        if (window.confirm(`Weet je zeker dat je groep ${group} uit klas ${classTitle} wilt verwijderen?`)) {\n            removeTeam(groupId).then(res => {\n                // Reload the page to show the updated group list\n                setTimeout(() => {\n                    window.location.reload();\n                }, 500);\n            });\n        } else {\n            // Do nothing\n        }\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                    <h1>Max score</h1>\n                </div>\n                <div className=\"timeScoringHeader\">\n                    <h1>Scores</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {groups && groups.length > 0 && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx} onClick={() => { openSpecificModal(group.id) }}>\n                                <section className=\"groupSection\">\n                                    <div className=\"groupImage\">\n                                        {group.image_url && group.image_url !== '' && group.name && ( <img src={`${apiUrl + group.image_url}`} alt={group.name} /> )}\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                        <button className=\"deleteGroup\" onClick={(e) => { removeGroup(e, group.name, group.class, group.id) }}>Verwijder groep</button>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                {group.students.length > 0 && (\n                                    <section className=\"studentsSection\">\n                                        <ul>\n                                            {group.students.map((student, idx) => (\n                                                <li key={idx}>\n                                                    <p>{student.student_number}</p>\n                                                    <p>{student.name}</p>                                        \n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </section>\n                                )}\n                                {/* Challenges */}\n                                {group.challenges.length > 0 && (\n                                    <>\n                                        <section className=\"challengesSection\" >\n                                            <ul>\n                                                {group.challenges.map((challenge, idx) => (\n                                                    <li key={idx}>\n                                                        <h3>{challenge.name}</h3>\n                                                        <div>1000</div>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section>\n\n                                        <section className=\"timeScoring\">\n                                            {group.challenges.map((challenge) => (                                        \n                                                <TimeScoring challenge={challenge} group_id={group.id} />\n                                            ))}                                            \n                                        </section>\n\n                                        {/* <section className=\"challengeKeys\">\n                                            <ul key={idx}>\n                                                {group.challenges.map((challenge, idx) => (                                        \n                                                    <li key={idx}>\n                                                        <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'} onClick={(e) => { toggleCode(e, challenge.keycode)}}>{challenge.keycode}</h3>\n                                                        <Copy className={'copy'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                        <Check className={'checkmark green hide'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section> */}\n                                    </>\n                                )}\n                            </li>\n                            <EditGroup \n                                group={group} \n                                openModal={openModal} \n                                closeModal={closeModal} \n                                apiUrl={apiUrl}\n                                setGroups={setGroups}\n                                setFilteredGroups={setFilteredGroups}\n                            />\n                        </>\n                    ))}\n                </ul>                \n            </section>\n        </>\n    );\n}\n\nexport default Groups;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { createTeam } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./NewGroup.css\";\n\nconst NewGroup = ({\n    openModal,\n    closeModal,\n    setGroups,\n    setFilteredGroups\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([0]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(null);\n    const [teamSuccessfullyCreated, setTeamSuccessfullyCreated] = useState(false);\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const takePhotoRef = useRef(null);\n    const studentsRef = useRef(null);\n\n    const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    // Firefox currently has a bug where the height can't be read from\n                    // the video, so we will make assumptions if this happens.\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    function clearPicture() {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const createTeamInComp = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        let students = studentsRef.current.children;\n        students = Array.from(students).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n        formData.append('students', JSON.stringify(students));\n        \n        const handleCreateTeam = async (formData, setTeamSuccessfullyCreated) => {\n            await createTeam(formData, setTeamSuccessfullyCreated)\n                .then(() => {\n                    // Update UI instead of reloading the page\n                    const fetchData = async () => {\n                        const data = await dataLayer();\n                        setGroups(data);\n                        setFilteredGroups(data);\n                    };\n                    fetchData();\n                    closeModal();\n                })\n                .catch((error) => {\n                    // Optionally, show an error notification to the user\n                    console.error('Failed to create team:', error);                    \n                });\n        };\n\n        handleCreateTeam(formData, setTeamSuccessfullyCreated);\n    };\n\n    useEffect(() => {\n        camera && getVideoStream();\n    }, [camera]);\n\n    useEffect(() => {\n        setWidth(600);\n    }, []);\n\n    useEffect(() => {\n        if (teamSuccessfullyCreated) {\n            closeModal();\n        }\n    }, [teamSuccessfullyCreated])\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"New group\"\n        >\n            <div className=\"newGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} ref={takePhotoRef} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { createTeamInComp(e) }}>\n                        <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={image} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"addStudents\" ref={studentsRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={\"Studentnummer\"} required />\n                                    <input type=\"text\" placeholder={\"Student naam\"} required />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"addButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type={'submit'}>Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default NewGroup;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\nimport NewGroup from \"../components/Modal/NewGroup\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  \n  const closeModal = () => setOpenModal(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n      const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n      return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (\n    <>\n      {isTeacher && (\n        <main>\n          <Filter\n            filters={filters}\n            setFilters={setFilters}\n            setOpenModal={setOpenModal}\n          />\n          {filteredGroups.length > 0 ? (\n            <Groups \n              groups={filteredGroups} \n              setGroups={setGroups}\n              setFilteredGroups={setFilteredGroups}\n            />\n          ) : (\n            <div className=\"nothingFound\">\n              Geen groepen gevonden.\n            </div>\n          )}\n          <NewGroup \n            openModal={openModal}\n            closeModal={closeModal}\n            setGroups={setGroups}\n            setFilteredGroups={setFilteredGroups}\n          />\n        </main>\n      )}\n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["filters","setFilters","setOpenModal","id","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","className","async","response","fetch","method","credentials","ok","Error","status","data","json","console","log","message","navigate","error","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","fill","height","viewBox","xmlns","d","version","width","clipRule","fillRule","group","openModal","setGroups","setFilteredGroups","camera","setCamera","streaming","setStreaming","newStudents","setNewStudents","setWidth","setHeight","image","setImage","image_url","cameraRef","useRef","canvasRef","videoRef","photoRef","newStudentsRef","oldStudentsRef","clearPicture","current","context","getContext","fillStyle","fillRect","offsetHeight","offsetWidth","toDataURL","setAttribute","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","addEventListener","play","err","videoHeight","videoWidth","isNaN","getVideoStream","Modal","content","top","left","right","bottom","marginRight","transform","ref","drawImage","preventDefault","takePicture","alt","onSubmit","formData","FormData","append","elements","teamName","klas","toLowerCase","group_id","oldStudents","Array","from","map","student","name","querySelector","student_number","JSON","stringify","editGroup","then","dataLayer","fetchData","catch","saveGroupChanges","required","onKeyDown","src","defaultValue","class","students","idx","key","studentNumber","studentName","window","confirm","removeStudent","filter","_","i","timeToMinutes","timeStr","hours","minutes","split","Number","challenge","firstRender","allowedTimeStr","setAllowedTimeStr","completionTimeStr","setCompletionTimeStr","allowedTime","completionTime","points","maxPoints","ratio","Math","round","calculatePoints","updateGroupChallenge","challenge_id","step","color","groups","apiUrl","visibleCodes","setVisibleCodes","length","modalName","classTitle","groupId","stopPropagation","removeTeam","res","setTimeout","location","reload","removeGroup","challenges","teamSuccessfullyCreated","setTeamSuccessfullyCreated","takePhotoRef","studentsRef","number","createTeam","handleCreateTeam","createTeamInComp","filteredGroups","isTeacher","setIsTeacher","checkSession","searchQueryGroup","searchedGroups","includes","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}