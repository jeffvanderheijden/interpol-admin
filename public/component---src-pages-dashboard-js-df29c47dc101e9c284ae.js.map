{"version":3,"file":"component---src-pages-dashboard-js-df29c47dc101e9c284ae.js","mappings":"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","sources":["webpack://admin-panel/./src/helpers/data/dataLayer.js","webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["const api = \"https://api.jeffvanderheijden.nl/api\";\n\nexport const getStudents = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/students-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getGroups = async () => {\n    try {\n        const response = await fetch(`${api}/groups`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenges = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/challenges-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenge = async (challengeId) => {\n    try {\n        const response = await fetch(`${api}/challenge-by-id?id=${challengeId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nconst dataLayer = () => {\n    let groupsData = [];\n\n    const fetchAllData = async () => {\n        const groups = await getGroups();\n        if (groups.length > 0) {\n            for (const group of groups) {\n                let dataRow = group;\n\n                const students = await getStudents(group.id);\n                dataRow.students = students;\n\n                const challenges = await getChallenges(group.id);\n\n                for (const challenge of challenges) {\n                    await getChallenge(challenge.challenge_id)\n                        .then(data => {\n                            challenge['name'] = data[0].name;\n                            challenge['minimum_points'] = data[0].minimum_points;\n                            challenge['time_limit'] = data[0].time_limit;\n                        }).catch(error => console.error(error));\n                }\n                dataRow.challenges = challenges;\n\n                groupsData.push(dataRow);\n            }\n        } else {\n            console.warn('No groups found.');\n        }\n\n        return groupsData;\n    };\n\n    return fetchAllData();\n}\n\nexport const checkSession = async () => {\n    try {\n        const response = await fetch(`${api}/check-type`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error checking session:', userData.error);\n            return false;\n        }\n\n        // Check if user is logged in as DOCENT\n        return userData === 'DOCENT' ? true : false;\n\n    } catch (error) {\n        console.error('Error checking session:', error);\n        return false;\n    }\n}\n\nexport default dataLayer;","import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React from \"react\";\nimport \"./Groups.css\";\n\nconst Groups = ({\n    groups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                </div>\n                <div className=\"challengeKeysHeader\">\n                    <h1>Code</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {/* Groups */}\n                    {groups && groups.map((group, idx) => (\n                        <li className=\"group\" key={idx}>\n                            <section className=\"groupSection\">\n                                <div className=\"groupImage\">\n                                    <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                                </div>\n                                <div>\n                                    <h2>{group.name}</h2>\n                                    <p>{group.class}</p>\n                                </div>\n                            </section>\n                            {/* Students */}\n                            <section className=\"studentsSection\">\n                                <ul>\n                                    {group.students.map((student, idx) => (\n                                        <li key={idx}>\n                                            <p>{student.student_number}</p>\n                                            <p>{student.name}</p>                                        \n                                        </li>\n                                    ))}\n                                </ul>\n                            </section>\n                            {/* Challenges */}\n                            <section className=\"challengesSection\">\n                                {group.challenges.map((challenge, idx) => (\n                                    <ul key={idx}>\n                                        <li>\n                                            <h3>{challenge.name}</h3>\n                                            <div>\n                                                {challenge.completed ? \n                                                    <span>V</span> : \n                                                    <span>X</span>\n                                                }\n                                            </div>\n                                        </li>\n                                    </ul>\n                                ))}\n                            </section>\n                            {/* Challenge keys */}\n                            <section className=\"challengeKeys\">\n                                {group.challenges.map((challenge, idx) => (\n                                    <ul key={idx}>\n                                        <li>\n                                            <h3>{challenge.keycode}</h3>\n                                        </li>\n                                    </ul>\n                                ))}\n                            </section>\n                        </li>\n                    ))}\n                </ul>\n            </section>\n        </>\n    );\n}\n\nexport default Groups;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]); \n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  // const [isTeacher, setIsTeacher] = useState(false);\n  const [isTeacher, setIsTeacher] = useState(true);\n\n  // Check if user is logged in as a teacher\n  // useEffect(() => {\n  //   checkSession().then(isTeacher => {\n  //     setIsTeacher(isTeacher);\n  //     if (!isTeacher) {\n  //       navigate('/');\n  //     }\n  //   });\n  // }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n          const data = await dataLayer();\n          setGroups(data);\n          setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n        const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n        return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n        group.students.some(student =>\n          student.name.toLowerCase().includes(searchQueryStudent)\n        ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (    \n    <>\n      {isTeacher && (\n        <main>\n          <Filter \n            filters={filters}\n            setFilters={setFilters}\n          />\n          <Groups\n            groups={filteredGroups}\n          />\n        </main>\n      )}    \n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["api","getStudents","async","response","fetch","groupId","json","error","console","getChallenges","getChallenge","challengeId","checkSession","method","credentials","ok","Error","status","userData","groupsData","groups","getGroups","length","group","dataRow","students","id","challenges","challenge","challenge_id","then","data","name","minimum_points","time_limit","catch","push","warn","fetchAllData","filters","setFilters","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","log","message","navigate","logout","className","map","idx","key","src","image_url","alt","class","student","student_number","completed","keycode","setGroups","useState","filteredGroups","setFilteredGroups","isTeacher","setIsTeacher","useEffect","dataLayer","fetchData","searchQueryGroup","toLowerCase","searchedGroups","filter","includes","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}