{"version":3,"file":"component---src-pages-dashboard-js-ff308daea0107c8f3dcf.js","mappings":"wNAwDA,MApDe,IAIR,IAJS,QACZA,EAAO,WACPC,EAAU,aACVC,GACH,EAsCG,OACI,2BAASC,GAAG,UACR,yBAAOC,KAAK,OAAOC,YAAY,sBAAsBC,SAAWC,IAvCnDA,KACjBN,EAAW,IACJD,EACHQ,YAAaD,EAAEE,OAAOC,OACxB,EAmC0EF,CAAYD,EAAE,EAAIG,MAAOV,EAAQQ,cACzG,yBAAOJ,KAAK,OAAOC,YAAY,wBAAwBC,SAAWC,IAjCnDA,KACnBN,EAAW,IACJD,EACHW,cAAeJ,EAAEE,OAAOC,OAC1B,EA6B4EC,CAAcJ,EAAE,EAAIG,MAAOV,EAAQW,gBAC7G,0BAAQC,QAAS,KAAQV,GAAa,EAAK,GAAI,mBAC/C,0BAAQW,UAAW,SAAUD,QAAS,KA5B/BE,WACX,IACI,MAAMC,QAAiBC,MAAM,gDAAiD,CAC1EC,OAAQ,OACRC,YAAa,YAGjB,IAAKH,EAASI,GACV,MAAM,IAAIC,MAAM,uBAAuBL,EAASM,QAGpD,MAAMC,QAAaP,EAASQ,OAC5BC,QAAQC,IAAI,qBAAsBH,EAAKI,UAGvCC,EAAAA,EAAAA,UAAS,IAEb,CAAE,MAAOC,GACLJ,QAAQI,MAAM,qBAAsBA,EAExC,GAQkDC,EAAQ,GAAI,aACpD,E,6BClBlB,MA/BuB,IAOhB,IAPiB,YACpBC,EAAW,eACXC,EAAc,WACdC,EAAU,aACVC,EAAY,aACZC,EAAY,SACZC,GACH,EACG,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAMzC,OAJAC,EAAAA,EAAAA,YAAU,KACNF,GAAY,EAAK,GAClB,IAEED,EAKD,gBAAC,IAAK,CACFI,OAAQV,EACRW,YAAaV,EACbW,eAAgBV,EAChBW,MAAOV,EACPC,aAAcA,GAEbC,GAXE,IAYC,ECnBhB,MATiB,IAGV,IAHW,QACdvB,EAAO,UACPC,GACH,EACG,OACI,uBAAKD,QAASA,EAASC,UAAWA,EAAW+B,KAAK,MAAMC,OAAO,KAAKC,QAAQ,gBAAgBC,MAAM,8BAA6B,wBAAMC,EAAE,2jBAAgkB,ECO/sB,MAZe,IAEP,uBAAKH,OAAO,OAAO1C,GAAG,UAAU8C,QAAQ,MAAMH,QAAQ,YAAYI,MAAM,OAAOH,MAAM,8BACjF,qBAAG5C,GAAG,UACF,wBAAMgD,SAAS,UAAUH,EAAE,mRAAmRJ,KAAK,UAAUQ,SAAS,YACtU,wBAAMD,SAAS,UAAUH,EAAE,oLAAoLJ,KAAK,UAAUQ,SAAS,YACvO,wBAAMD,SAAS,UAAUH,EAAE,sdAAsdJ,KAAK,UAAUQ,SAAS,cC0NzhB,MA1NkB,IAOX,IAPY,MACjBC,EAAK,UACLC,EAAS,WACTtB,EAAU,UACVuB,EAAS,kBACTC,EAAiB,OACjBC,GACD,EACC,MAAM,EAACC,EAAO,EAACC,IAAarB,EAAAA,EAAAA,WAAS,IAC/B,EAACsB,EAAU,EAACC,IAAgBvB,EAAAA,EAAAA,WAAS,IACrC,EAACwB,EAAgB,EAACC,IAAsBzB,EAAAA,EAAAA,WAAS,IACjD,EAAC0B,EAAY,EAACC,IAAkB3B,EAAAA,EAAAA,UAAS,KACzC,EAACY,EAAM,EAACgB,IAAY5B,EAAAA,EAAAA,UAAS,MAC7B,EAACO,EAAO,EAACsB,IAAa7B,EAAAA,EAAAA,UAAS,IAC/B,EAAC8B,EAAM,EAACC,IAAY/B,EAAAA,EAAAA,UAASe,EAAMiB,WAAa,MAEhDC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAAWF,EAAAA,EAAAA,QAAO,MAClBG,GAAiBH,EAAAA,EAAAA,QAAO,MACxBI,GAAiBJ,EAAAA,EAAAA,QAAO,OAE9BjC,EAAAA,EAAAA,YAAU,IAAM0B,EAAe,KAAK,CAACX,IAErC,MA4BMuB,EAAe,KACnB,GAAIJ,EAAUK,SAAWJ,EAASI,QAAS,CACzC,MAAMC,EAAUN,EAAUK,QAAQE,WAAW,MAC7CD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGT,EAAUK,QAAQ5B,MAAOuB,EAAUK,QAAQjC,QAElE,MAAMvB,EAAOmD,EAAUK,QAAQK,UAAU,aACzCT,EAASI,QAAQM,aAAa,MAAO9D,EACvC,IAiEFiB,EAAAA,EAAAA,YAAU,KACJmB,GAtGiB5C,WACrB,IACE+D,IACA,MAAMQ,QAAeC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACzED,EAAQlB,EAASO,QACvB,IAAKW,EAAO,OAEZA,EAAME,UAAYN,EAClBI,EAAMG,OAENH,EAAMI,iBAAmB,KACvB,MAAMC,EAAkB,IAClBC,EAAmBN,EAAMO,aAAeP,EAAMQ,WAAaH,GACjE5B,EAAS4B,GACT3B,EAAU4B,GAEVN,EAAML,aAAa,QAASU,GAC5BL,EAAML,aAAa,SAAUW,GAC7BtB,EAAUK,QAAQM,aAAa,QAASU,GACxCrB,EAAUK,QAAQM,aAAa,SAAUW,GAEzClC,GAAa,EAAK,CAEtB,CAAE,MAAOqC,GACP1E,QAAQI,MAAM,wBAAyBsE,EACzC,GA6EYC,EAAgB,GAC3B,CAACzC,IAaJ,OACE,gBAAC0C,EAAc,CACbtE,YAAawB,IAAcD,EAAMlD,GACjC4B,eAAgB,KAChBC,WAAYA,EACZC,aAhBiB,CACnBoE,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAUXzE,aAAa,cAEb,uBAAKrB,UAAU,aACZ6C,EACC,uBAAK7C,UAAU,UACb,yBAAO+F,IAAKrC,EAAUpE,GAAG,SAAQ,+BACjC,uBAAKU,UAAU,iBACb,0BAAQT,KAAK,SAASQ,QA1Fd,KAClB,IAAK6D,EAAUK,UAAYP,EAASO,UAAYJ,EAASI,QAAS,OAClDL,EAAUK,QAAQE,WAAW,MACrC6B,UAAUtC,EAASO,QAAS,EAAG,EAAG5B,EAAOL,GACjD,MAAMiE,EAAUrC,EAAUK,QAAQK,UAAU,aAC5Cd,EAASyC,GACTpC,EAASI,QAAQM,aAAa,MAAO0B,GACrC/C,GAAmB,EAAK,EAmF8BlD,UAAU,OAAM,4BAAM,eAClE,0BAAQT,KAAK,SAASQ,QAAS,IAAM+C,GAAU,GAAQ9C,UAAU,OAAM,4BAAM,kBAE/E,uBAAKA,UAAU,UACb,uBAAKA,UAAU,cACb,uBAAK+F,IAAKlC,EAAUvE,GAAG,QAAQ4G,IAAI,gBAErC,0BAAQ5G,GAAG,SAASyG,IAAKnC,MAI7B,wBAAMuC,SA9EWlG,UACvBP,EAAE0G,iBAEF,MAAMC,EAAcC,MAAMC,KAAKzC,EAAeG,QAAQ3C,UAAUkF,KAAIC,IAAO,CACzEC,KAAMD,EAAQE,cAAc,sBAAsB9G,MAClD+G,eAAgBH,EAAQE,cAAc,wBAAwB9G,UAG1DgH,EAAkBP,MAAMC,KAAKxC,EAAeE,QAAQ3C,UAAUkF,KAAIC,IAAO,CAC7EC,KAAMD,EAAQE,cAAc,sBAAsB9G,MAClD+G,eAAgBH,EAAQE,cAAc,wBAAwB9G,UAG1DiH,EAAW,IAAIC,SAOrB,GANAD,EAASE,OAAO,WAAYtH,EAAEE,OAAOqH,SAASC,SAASrH,OACvDiH,EAASE,OAAO,OAAQtH,EAAEE,OAAOqH,SAASE,SAAStH,OACnDiH,EAASE,OAAO,QAAStH,EAAEE,OAAOqH,SAASG,KAAKvH,MAAMwH,eACtDP,EAASE,OAAO,WAAYM,KAAKC,UAAU,GAAD,eAAKlB,IAAW,OAAKQ,MAG3DtD,GAASA,EAAMiE,WAAW,SAAU,CAEtC,MAAMC,QAAYtH,MAAMoD,GAClBmE,QAAaD,EAAIC,OACvBZ,EAASE,OAAO,QAASU,EAAM,YACjC,CAEA,UACQC,EAAAA,EAAAA,IAAUb,GAChB,MAAMrG,QAAamH,EAAAA,EAAAA,MACnBlF,EAAUjC,GACVkC,EAAkBlC,GAClBU,GACF,CAAE,MAAOJ,GACPJ,QAAQI,MAAM,wBAAyBA,GACvC8G,MAAM,0DACR,IA2CQ,yBAAOtI,KAAK,SAASD,GAAG,WAAWO,MAAO2C,EAAMlD,GAAIwI,UAAQ,IAC5D,2BAAS9H,UAAU,gBACjB,uBAAKA,UAAU,aAAaD,QAAS,IAAM+C,GAAU,IAClDS,EACC,uBACEwE,IACExE,EAAMiE,WAAW,SAAWjE,EAAMiE,WAAW,SACzCjE,EAAK,GACFX,EAASW,EAElB2C,IAAI,SAGN,gBAAC,EAAM,OAGX,2BACE,yBAAO3G,KAAK,OAAOD,GAAG,WAAW0I,aAAcxF,EAAMkE,KAAMA,KAAK,WAAWlH,YAAY,YAAYsI,UAAQ,IAC3G,yBAAOvI,KAAK,OAAOD,GAAG,OAAO0I,aAAcxF,EAAMyF,MAAOvB,KAAK,OAAOlH,YAAY,OAAOsI,UAAQ,MAInG,sBAAI9H,UAAU,eAAe+F,IAAKjC,GAC/BtB,EAAM0F,SAAS1B,KAAI,CAACC,EAAS0B,IAC5B,sBAAIC,IAAKD,GACP,yBAAO5I,KAAK,SAASyI,aAAcvB,EAAQG,iBAC3C,yBAAOrH,KAAK,OAAOyI,aAAcvB,EAAQC,OACzC,gBAAC,EAAQ,CAAC1G,UAAU,WAAWD,QAAS,KAAMsI,OAvH/BC,EAuHqD7B,EAAQG,eAvH9C2B,EAuH8D9B,EAAQC,UAtH7G8B,OAAOC,QAAQ,wBAAwBF,EAAW,uCAEvDG,EAAAA,EAAAA,IAAcJ,GACXK,MAAK1I,UACJ,MAAMQ,QAAamH,EAAAA,EAAAA,MACnBlF,EAAUjC,GACVkC,EAAkBlC,GAClBU,GAAY,IAEbyH,MAAMjI,QAAQI,QAVW,IAACuH,EAAeC,CAuH4E,QAKhH,sBAAIvI,UAAU,eAAe+F,IAAKhC,GAC/BZ,EAAYqD,KAAI,CAACC,EAAS0B,IACzB,sBAAIC,IAAKD,GACP,yBAAO5I,KAAK,SAASC,YAAaiH,EAAQG,iBAC1C,yBAAOrH,KAAK,OAAOC,YAAaiH,EAAQC,OACxC,gBAAC,EAAQ,CAAC1G,UAAU,WAAWD,QAAS,IAAMqD,EAAeD,EAAY0F,QAAO,CAACC,EAAGC,IAAMA,IAAMZ,WAKtG,uBAAKnI,UAAU,eACb,0BAAQT,KAAK,SAASQ,QAAS,IAAMqD,EAAe,GAAD,eAAKD,GAAW,CAAE,CAAEuD,KAAM,GAAIE,eAAgB,QAAQ,qBACzG,0BAAQrH,KAAK,UAAS,cAKf,EC7IrB,MA5EkB,IAIX,IAJY,MACfiD,EAAK,UACLC,EAAS,WACTtB,GACH,EACG,MAAM,EAAC6H,EAAY,EAACC,IAAkBxH,EAAAA,EAAAA,UAAS,KAa/CC,EAAAA,EAAAA,YAAU,KACFc,GAASA,EAAM0G,YACfD,EAAezG,EAAM0G,WAAW1C,KAAI2C,GAAKA,EAAEC,QAAU,KACzD,GACD,CAAC5G,IA2BJ,OACI,gBAAC+C,EAAc,CACXtE,YAAawB,IAAcD,EAAMlD,GACjC4B,eAAgB,KAChBC,WAAYA,EACZE,aAAa,SACbD,aAhDa,CACjBoE,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,2BA2CX,wBAAM9F,UAAU,aAAamG,SAzBfzG,IAClBA,EAAE0G,iBAEF,MAAMiD,EAAa7G,EAAM0G,WAAW1C,KAAI,CAAC8C,EAAWnB,KAAG,CACnDoB,YAAaD,EAAUhK,GACvB8J,OAAQJ,EAAYb,QAGxBqB,EAAAA,EAAAA,IAAahH,EAAMlD,GAAI+J,GAClBV,MAAKzI,IACFS,QAAQC,IAAI,mBAAoBV,GAEhCiB,GAAY,IAEfyH,OAAM7H,GAASJ,QAAQI,MAAM,yBAA0BA,IAAO,GAY1DyB,EAAM0G,WAAW1C,KAAI,CAAC8C,EAAWnB,IAC9B,sBAAIC,IAAKkB,EAAUhK,IACf,0BAAKgK,EAAU5C,MACf,yBACIlH,YAAawJ,EAAYb,IAAQ,EACjCtI,MAAOmJ,EAAYb,GACnB1I,SAAWC,GAxCd,EAACyI,EAAKtI,KACvBoJ,GAAeQ,IACX,MAAMC,GAAQ,OAAOD,GAErB,OADAC,EAASvB,GAAOtI,EACT6J,CAAQ,GACjB,EAmCmCC,CAAaxB,EAAKzI,EAAEE,OAAOC,YAIxD,uBAAKG,UAAU,eACX,0BAAQT,KAAK,UAAS,aAGjB,ECmGzB,MAtKe,IAIR,IAJS,OACZqK,EAAM,UACNlH,EAAS,kBACTC,GACH,EACG,MAAMC,EAAS,mCACT,EAACH,EAAU,EAACpD,IAAgBoC,EAAAA,EAAAA,UAAS,OACrC,EAACoI,EAAgB,EAACC,IAAuBrI,EAAAA,EAAAA,UAAS,OAClD,EAACsI,EAAa,EAACC,IAAmBvI,EAAAA,EAAAA,UAAS,IAE3CN,EAAa,IAAM9B,EAAa,MAChC4K,EAAmB,IAAMH,EAAoB,MAqCnD,OACI,gCACI,2BAASxK,GAAG,gBACR,uBAAKU,UAAU,gBACX,0BAAI,YAER,uBAAKA,UAAU,kBACX,0BAAI,iBACJ,0BAAI,SAER,uBAAKA,UAAU,oBACX,0BAAI,eACJ,0BAAI,cAER,uBAAKA,UAAU,qBACX,0BAAI,YAGZ,2BAASV,GAAG,UACR,sBAAIA,GAAG,cACFsK,GAAUA,EAAOM,OAAS,GAAKN,EAAOpD,KAAI,CAAChE,EAAO2F,IAC/C,gCACI,sBAAInI,UAAU,QAAQoI,IAAKD,EAAKpI,QAAS,KA1DtCoK,QA0DgE3H,EAAMlD,GA1DxDD,EAAa8K,EA0D8C,GACxE,2BAASnK,UAAU,gBACf,uBAAKA,UAAU,cACVwC,EAAMiB,WAAiC,KAApBjB,EAAMiB,WAAoBjB,EAAMkE,MAChD,uBACIqB,IACIvF,EAAMiB,UAAU+D,WAAW,SACvBhF,EAAMiB,UAAU+D,WAAW,SACzBhF,EAAMiB,UAAS,GACZb,EAASJ,EAAMiB,UAE5ByC,IAAK1D,EAAMkE,QAIvB,2BACI,0BAAKlE,EAAMkE,MACX,yBAAIlE,EAAMyF,OACV,0BAAQjI,UAAU,cAAcD,QAAUL,IAtD1D,EAACA,EAAG8C,EAAO4H,EAAYC,KACvC3K,EAAE4K,kBACE9B,OAAOC,QAAQ,8BAA8BjG,EAAK,aAAa4H,EAAU,wBACzEG,EAAAA,EAAAA,IAAWF,GAAS1B,MAAKlB,IAErB+C,YAAW,KACPhC,OAAOiC,SAASC,QAAQ,GACzB,IAAI,GAGX,EA4C8EC,CAAYjL,EAAG8C,EAAMkE,KAAMlE,EAAMyF,MAAOzF,EAAMlD,GAAG,GAAI,qBAI9GkD,EAAM0F,SAASgC,OAAS,GACrB,2BAASlK,UAAU,mBACf,0BACKwC,EAAM0F,SAAS1B,KAAI,CAACC,EAAS0B,IAC1B,sBAAIC,IAAKD,GACL,yBAAI1B,EAAQG,gBACZ,yBAAIH,EAAQC,WAO/BlE,EAAM0G,WAAWgB,OAAS,GACvB,gCACI,2BAASlK,UAAU,qBACf,0BACKwC,EAAM0G,WAAW1C,KAAI,CAAC8C,EAAWnB,IAC9B,sBAAIC,IAAKD,GACL,0BAAKmB,EAAU5C,MACf,2BAAK,cA0B7B,2BAAS1G,UAAU,iBACf,4BAAM,IAAEwC,EAAM0G,WAAW0B,QAAO,CAACC,EAAK1B,IAAM0B,GAAO1B,EAAEC,QAAU,IAAI,GAAG,KACtE,0BAAQpJ,UAAU,YAAYD,QAAUL,IAAQA,EAAE4K,kBAAmBR,EAAoBtH,EAAMlD,GAAG,GAAK,sBAK/G,gBAAC,EAAS,CACNkD,MAAOA,EACPC,UAAWA,EACXtB,WAAYA,EACZyB,OAAQA,EACRF,UAAWA,EACXC,kBAAmBA,IAEvB,gBAAC,EAAS,CACNH,MAAOA,EACPC,UAAWoH,EACX1I,WAAY8I,SAMjC,EC4CX,MAhNiB,IAKV,IALW,UACdxH,EAAS,WACTtB,EAAU,UACVuB,EAAS,kBACTC,GACH,EACG,MAAM,EAACE,EAAO,EAACC,IAAarB,EAAAA,EAAAA,WAAS,IAC/B,EAACsB,EAAU,EAACC,IAAgBvB,EAAAA,EAAAA,WAAS,IACrC,EAAC0B,EAAY,EAACC,IAAkB3B,EAAAA,EAAAA,UAAS,CAAC,KAC1C,EAACY,EAAM,EAACgB,IAAY5B,EAAAA,EAAAA,UAAS,OAC7B,EAACO,EAAO,EAACsB,IAAa7B,EAAAA,EAAAA,UAAS,OAC/B,EAAC8B,EAAM,EAACC,IAAY/B,EAAAA,EAAAA,UAAS,OAC7B,EAACqJ,EAAwB,EAACC,IAA8BtJ,EAAAA,EAAAA,WAAS,GAEjEuJ,GAAYrH,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBD,GAAWC,EAAAA,EAAAA,QAAO,MAClBE,GAAWF,EAAAA,EAAAA,QAAO,MAClBsH,GAAetH,EAAAA,EAAAA,QAAO,MACtBuH,GAAcvH,EAAAA,EAAAA,QAAO,MAwC3B,SAASK,IACL,GAAIJ,GAAaA,EAAUK,SAAWJ,GAAYA,EAASI,QAAS,CAChE,MAAMC,EAAUN,EAAUK,QAAQE,WAAW,MAC7CD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGT,EAAUK,QAAQkH,aAAcvH,EAAUK,QAAQmH,aAEzE,MAAM3K,EAAOmD,EAAUK,QAAQK,UAAU,aACzCT,EAASI,QAAQM,aAAa,MAAO9D,EACzC,CACJ,EAwDAiB,EAAAA,EAAAA,YAAU,KACNmB,GAxGmB5C,WACnB,IACI+D,IACA,MAAMQ,QAAeC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAC/E,IAAInB,IAAYA,EAASO,QAMrB,OALAP,EAASO,QAAQa,UAAYN,EAC7Bd,EAASO,QAAQoH,iBAAiB,kBAAkB,KAChD3H,EAASO,QAAQc,MAAM,GAKnC,CAAE,MAAOM,GACL1E,QAAQI,MAAMsE,EAClB,CAEI3B,GAAYA,EAASO,SACrBP,EAASO,QAAQoH,iBAAiB,WAAW,KACpCtI,IACDO,EAAUI,EAASO,QAAQkB,aAAezB,EAASO,QAAQmB,WAAa/C,IAKpEiJ,MAAMtJ,IACNsB,EAAUjB,GAAS,EAAI,IAG3BqB,EAASO,QAAQM,aAAa,QAASlC,GACvCqB,EAASO,QAAQM,aAAa,SAAUvC,GACxC4B,EAAUK,QAAQM,aAAa,QAASlC,GACxCuB,EAAUK,QAAQM,aAAa,SAAUvC,GACzCgB,GAAa,GACjB,IACD,EACP,EAqEUsC,EAAgB,GAC3B,CAACzC,KAEJnB,EAAAA,EAAAA,YAAU,KACN2B,EAAS,IAAI,GACd,KAEH3B,EAAAA,EAAAA,YAAU,KACFoJ,GACA3J,GACJ,GACD,CAAC2J,IAaJ,OACI,gBAACvF,EAAc,CACXtE,YAAawB,EACbvB,eAAgB,KAChBC,WAAYA,EACZC,aAhBa,CACjBoE,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAUXzE,aAAa,aAEb,uBAAKrB,UAAU,YACV6C,EACG,uBAAK7C,UAAU,SAAS+F,IAAKiF,GACzB,yBAAOjF,IAAKrC,EAAUpE,GAAG,SAAQ,+BACjC,uBAAKU,UAAU,iBACX,0BAAQD,QAAUL,IA5FrBA,KACjB,GAAIkE,GAAaA,EAAUK,SAAWJ,GAAYA,EAASI,SAAWP,GAAYA,EAASO,QAAS,CAChG,MAAMC,EAAUN,EAAUK,QAAQE,WAAW,MAC7C,GAAI9B,GAASL,EAAQ,CACjB4B,EAAUK,QAAQ5B,MAAQA,EAC1BuB,EAAUK,QAAQjC,OAASA,EAC3BkC,EAAQ8B,UAAUtC,EAASO,QAAS,EAAG,EAAG5B,EAAOL,GAEjD,MAAMvB,EAAOmD,EAAUK,QAAQK,UAAU,aACzCd,EAAS/C,GACToD,EAASI,QAAQM,aAAa,MAAO9D,EACzC,MACIuD,GAER,CACAtE,EAAE0G,gBAAgB,EA6E4BmF,CAAY7L,EAAE,EAAIqG,IAAKkF,EAAc1L,KAAK,SAASD,GAAG,cAAcU,UAAU,OAAM,4BAAM,eACpH,0BAAQD,QAAS,KAAQ+C,GAAU,EAAM,EAAIvD,KAAK,SAASD,GAAG,aAAaU,UAAU,OAAM,4BAAM,gBAErG,uBAAKA,UAAU,UACX,uBAAKA,UAAU,cACX,uBAAK+F,IAAKlC,EAAUvE,GAAG,QAAQ4G,IAAI,gBAEvC,0BAAQ5G,GAAG,SAASyG,IAAKnC,MAIjC,wBAAMuC,SAAWzG,IArFRO,WACrBP,EAAE0G,iBACF,MAAMU,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASzD,GACzBuD,EAASE,OAAO,OAAQtH,EAAEE,OAAOqH,SAASE,SAAStH,OACnDiH,EAASE,OAAO,QAAStH,EAAEE,OAAOqH,SAASG,KAAKvH,MAAMwH,eACtD,IAAIa,EAAWgD,EAAYjH,QAAQ3C,SACnC4G,EAAW5B,MAAMC,KAAK2B,GAAU1B,KAAIC,IACzB,CACHC,KAAMD,EAAQE,cAAc,sBAAsB9G,MAClD2L,OAAQ/E,EAAQE,cAAc,wBAAwB9G,UAG9DiH,EAASE,OAAO,WAAYM,KAAKC,UAAUW,IAElBjI,OAAO6G,EAAUiE,WAChCU,EAAAA,EAAAA,IAAW3E,EAAUiE,GACtBpC,MAAK,KAEgB1I,WACd,MAAMQ,QAAamH,EAAAA,EAAAA,MACnBlF,EAAUjC,GACVkC,EAAkBlC,EAAK,EAE3BiL,GACAvK,GAAY,IAEfyH,OAAO7H,IAEJJ,QAAQI,MAAM,yBAA0BA,EAAM,GAChD,EAGV4K,CAAiB7E,EAAUiE,EAA2B,EAoDjBa,CAAiBlM,EAAE,GACxC,yBAAOH,KAAK,SAASD,GAAG,QAAQoH,KAAK,QAAQ7G,MAAO0D,EAAOuE,UAAQ,IACnE,2BAAS9H,UAAU,gBACf,uBAAKA,UAAU,aAAaD,QAAS,KAAQ+C,GAAU,EAAK,EAAI+I,UAAW,KAAQ/I,GAAU,EAAK,GAC7FS,EACG,uBAAKwE,IAAKxE,EAAO2C,IAAI,SAErB,gBAAC,EAAM,OAGf,2BACI,yBAAO3G,KAAK,OAAOD,GAAG,WAAWoH,KAAK,WAAWlH,YAAY,YAAYsI,UAAQ,IACjF,yBAAOvI,KAAK,OAAOD,GAAG,OAAOoH,KAAK,OAAOlH,YAAY,OAAOsI,UAAQ,MAG5E,sBAAI9H,UAAU,cAAc+F,IAAKmF,GAC5B/H,EAAYqD,KAAI,CAACC,EAAS0B,IACvB,sBAAIC,IAAKD,GACL,yBAAO5I,KAAK,SAASC,YAAa,gBAAiBsI,UAAQ,IAC3D,yBAAOvI,KAAK,OAAOC,YAAa,eAAgBsI,UAAQ,IACxD,gBAAC,EAAQ,CAAC9H,UAAW,WAAYD,QAAS,KAAQqD,EAAeD,EAAY0F,QAAO,CAACC,EAAGC,IAAMA,IAAMZ,IAAK,QAIrH,uBAAKnI,UAAU,cACX,0BAAQD,QAAUL,IAAQA,EAAE0G,iBAAkBhD,EAAe,GAAD,eAAKD,GAAW,CAAE,CAAEuD,KAAM,GAAIE,eAAgB,MAAM,GAAI,qBACpH,0BAAQrH,KAAM,UAAU,cAK3B,ECjHzB,MAzFsB,KACpB,MAAM,EAACqK,EAAO,EAAClH,IAAajB,EAAAA,EAAAA,UAAS,KAC/B,EAACqK,EAAe,EAACnJ,IAAqBlB,EAAAA,EAAAA,UAAS,KAC/C,EAACtC,EAAQ,EAACC,IAAcqC,EAAAA,EAAAA,UAAS,CAAE9B,YAAa,GAAIG,cAAe,MACnE,EAACiM,EAAU,EAACC,IAAgBvK,EAAAA,EAAAA,WAAS,IACrC,EAACgB,EAAU,EAACpD,IAAgBoC,EAAAA,EAAAA,WAAS,GAoD3C,OA/CAC,EAAAA,EAAAA,YAAU,MACRuK,EAAAA,EAAAA,MAAetD,MAAKoD,IAClBC,EAAaD,GACRA,IACHjL,EAAAA,EAAAA,UAAS,IACX,GACA,GACD,KAGHY,EAAAA,EAAAA,YAAU,KACR,GAAIqK,EAAW,CACK9L,WAChB,MAAMQ,QAAamH,EAAAA,EAAAA,MACnBlF,EAAUjC,GACVkC,EAAkBlC,EAAK,EAEzBiL,EACF,IACC,CAACK,KAGJrK,EAAAA,EAAAA,YAAU,KACRtC,EAAW,IAAKD,EAASW,cAAe,KACxC,MAAMoM,EAAmB/M,EAAQQ,YAAY0H,cAEvC8E,EAAiBvC,EAAOf,QAAOrG,GACVA,EAAMkE,KAAKW,cAAc+E,SAASF,KAI7DvJ,EAAkBwJ,EAAe,GAChC,CAAChN,EAAQQ,eAGZ+B,EAAAA,EAAAA,YAAU,KACRtC,EAAW,IAAKD,EAASQ,YAAa,KACtC,MAAM0M,EAAqBlN,EAAQW,cAAcuH,cAE3CiF,EAAiB1C,EAAOf,QAAOrG,GACnCA,EAAM0F,SAASqE,MAAK9F,GAClBA,EAAQC,KAAKW,cAAc+E,SAASC,OAGxC1J,EAAkB2J,EAAe,GAChC,CAACnN,EAAQW,gBAGV,gCACGiM,GACC,4BACE,gBAAC,EAAM,CACL5M,QAASA,EACTC,WAAYA,EACZC,aAAcA,IAEfyM,EAAe5B,OAAS,EACvB,gBAAC,EAAM,CACLN,OAAQkC,EACRpJ,UAAWA,EACXC,kBAAmBA,IAGrB,uBAAK3C,UAAU,gBAAe,0BAIhC,gBAAC,EAAQ,CACPyC,UAAWA,EACXtB,WAxES,IAAM9B,GAAa,GAyE5BqD,UAAWA,EACXC,kBAAmBA,KAIxB,EAMA,MAAM6J,EAAO,IAAM,6BAAO,c","sources":["webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Trashcan.js","webpack://admin-panel/./src/helpers/icons/Camera.js","webpack://admin-panel/./src/components/Modal/EditGroup.js","webpack://admin-panel/./src/components/Modal/AddPoints.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/components/Modal/NewGroup.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters,\n    setOpenModal\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { setOpenModal(true) }}>Groep toevoegen</button>\n            <button className={\"logout\"} onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Trashcan = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} fill=\"red\" height=\"18\" viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M767 336H233q-12 0-21 9t-9 21l38 505q1 13 12 21.5t30 8.5h434q18 0 29-8.5t13-21.5l38-505q0-12-9-21t-21-9zM344 841q-10 0-18-9t-8-21l-26-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5l18 386q0 12-7.5 21t-18.5 9zm182-31q0 13-7.5 22t-18.5 9-18.5-9-7.5-22l-4-385q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm156 1q0 12-8 21t-18 9q-11 0-18.5-9t-7.5-21l18-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm101-605l-179-30q-12-2-15-15l-8-33q-4-20-14-26-6-3-22-3h-90q-16 0-23 3-10 6-13 26l-8 33q-2 13-15 15l-179 30q-19 3-31.5 14.5T173 249v28q0 9 6.5 15t15.5 6h610q9 0 15.5-6t6.5-15v-28q0-17-12.5-28.5T783 206z\"/></svg>\n    )\n}\n\nexport default Trashcan;","import React from 'react';\n\nconst Camera = () => {\n    return (\n        <svg height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"camera\">\n                <path clipRule=\"evenodd\" d=\"M16,10.001c-4.419,0-8,3.581-8,8c0,4.418,3.581,8,8,8 c4.418,0,8-3.582,8-8C24,13.583,20.418,10.001,16,10.001z M20.555,21.906c-2.156,2.516-5.943,2.807-8.459,0.65 c-2.517-2.156-2.807-5.944-0.65-8.459c2.155-2.517,5.943-2.807,8.459-0.65C22.42,15.602,22.711,19.391,20.555,21.906z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M16,14.001c-2.209,0-3.999,1.791-4,3.999v0.002 c0,0.275,0.224,0.5,0.5,0.5s0.5-0.225,0.5-0.5V18c0.001-1.656,1.343-2.999,3-2.999c0.276,0,0.5-0.224,0.5-0.5 S16.276,14.001,16,14.001z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M29.492,9.042l-4.334-0.723l-1.373-3.434 C23.326,3.74,22.232,3,21,3H11C9.768,3,8.674,3.74,8.214,4.886L6.842,8.319L2.509,9.042C1.055,9.283,0,10.527,0,12v15 c0,1.654,1.346,3,3,3h26c1.654,0,3-1.346,3-3V12C32,10.527,30.945,9.283,29.492,9.042z M30,27c0,0.553-0.447,1-1,1H3 c-0.553,0-1-0.447-1-1V12c0-0.489,0.354-0.906,0.836-0.986l5.444-0.907l1.791-4.478C10.224,5.25,10.591,5,11,5h10 c0.408,0,0.775,0.249,0.928,0.629l1.791,4.478l5.445,0.907C29.646,11.094,30,11.511,30,12V27z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport default Camera;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { editGroup, removeStudent } from \"../../helpers/data/dataLayer\";\nimport dataLayer from \"../../helpers/data/dataLayer\";\nimport \"./EditGroup.css\";\n\nconst EditGroup = ({\n  group,\n  openModal,\n  closeModal,\n  setGroups,\n  setFilteredGroups,\n  apiUrl\n}) => {\n  const [camera, setCamera] = useState(false);\n  const [streaming, setStreaming] = useState(false);\n  const [hasTakenPicture, setHasTakenPicture] = useState(false);\n  const [newStudents, setNewStudents] = useState([]);\n  const [width, setWidth] = useState(320);\n  const [height, setHeight] = useState(0);\n  const [image, setImage] = useState(group.image_url || null);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const photoRef = useRef(null);\n  const oldStudentsRef = useRef(null);\n  const newStudentsRef = useRef(null);\n\n  useEffect(() => setNewStudents([]), [openModal]);\n\n  const getVideoStream = async () => {\n    try {\n      clearPicture();\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n      const video = videoRef.current;\n      if (!video) return;\n\n      video.srcObject = stream;\n      video.play();\n\n      video.onloadedmetadata = () => {\n        const calculatedWidth = 320;\n        const calculatedHeight = video.videoHeight / (video.videoWidth / calculatedWidth);\n        setWidth(calculatedWidth);\n        setHeight(calculatedHeight);\n\n        video.setAttribute(\"width\", calculatedWidth);\n        video.setAttribute(\"height\", calculatedHeight);\n        canvasRef.current.setAttribute(\"width\", calculatedWidth);\n        canvasRef.current.setAttribute(\"height\", calculatedHeight);\n\n        setStreaming(true);\n      };\n    } catch (err) {\n      console.error(\"Failed to get webcam:\", err);\n    }\n  };\n\n  const clearPicture = () => {\n    if (canvasRef.current && photoRef.current) {\n      const context = canvasRef.current.getContext(\"2d\");\n      context.fillStyle = \"#000\";\n      context.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      const data = canvasRef.current.toDataURL(\"image/png\");\n      photoRef.current.setAttribute(\"src\", data);\n    }\n  };\n\n  const takePicture = () => {\n    if (!canvasRef.current || !videoRef.current || !photoRef.current) return;\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, 0, 0, width, height);\n    const dataURL = canvasRef.current.toDataURL(\"image/png\");\n    setImage(dataURL);\n    photoRef.current.setAttribute(\"src\", dataURL);\n    setHasTakenPicture(true);\n  };\n\n  const removeExistingStudent = (studentNumber, studentName) => {\n    if (!window.confirm(`Weet je zeker dat je ${studentName} wilt verwijderen uit deze groep?`)) return;\n\n    removeStudent(studentNumber)\n      .then(async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n        closeModal();\n      })\n      .catch(console.error);\n  };\n\n  const saveGroupChanges = async (e) => {\n    e.preventDefault();\n\n    const oldStudents = Array.from(oldStudentsRef.current.children).map(student => ({\n      name: student.querySelector('input[type=\"text\"]').value,\n      student_number: student.querySelector('input[type=\"number\"]').value\n    }));\n\n    const newStudentsData = Array.from(newStudentsRef.current.children).map(student => ({\n      name: student.querySelector('input[type=\"text\"]').value,\n      student_number: student.querySelector('input[type=\"number\"]').value\n    }));\n\n    const formData = new FormData();\n    formData.append(\"group_id\", e.target.elements.group_id.value);\n    formData.append(\"name\", e.target.elements.teamName.value);\n    formData.append(\"class\", e.target.elements.klas.value.toLowerCase());\n    formData.append(\"students\", JSON.stringify([...oldStudents, ...newStudentsData]));\n\n    // Handle image upload\n    if (image && image.startsWith(\"data:\")) {\n      // Convert base64 to blob\n      const res = await fetch(image);\n      const blob = await res.blob();\n      formData.append(\"image\", blob, \"group.png\");\n    }\n\n    try {\n      await editGroup(formData);\n      const data = await dataLayer();\n      setGroups(data);\n      setFilteredGroups(data);\n      closeModal();\n    } catch (error) {\n      console.error(\"Error updating group:\", error);\n      alert(\"Er is een fout opgetreden bij het opslaan van de groep.\");\n    }\n  };\n\n  useEffect(() => {\n    if (camera) getVideoStream();\n  }, [camera]);\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\"\n    }\n  };\n\n  return (\n    <ModalComponent\n      modalIsOpen={openModal === group.id}\n      afterOpenModal={null}\n      closeModal={closeModal}\n      customStyles={customStyles}\n      contentLabel=\"Edit group\"\n    >\n      <div className=\"editGroup\">\n        {camera ? (\n          <div className=\"camera\">\n            <video ref={videoRef} id=\"video\">Video stream not available.</video>\n            <div className=\"buttonWrapper\">\n              <button type=\"button\" onClick={takePicture} className=\"btn\"><span>Take photo</span></button>\n              <button type=\"button\" onClick={() => setCamera(false)} className=\"btn\"><span>Close camera</span></button>\n            </div>\n            <div className=\"output\">\n              <div className=\"imgWrapper\">\n                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n              </div>\n              <canvas id=\"canvas\" ref={canvasRef} />\n            </div>\n          </div>\n        ) : (\n          <form onSubmit={saveGroupChanges}>\n            <input type=\"hidden\" id=\"group_id\" value={group.id} required />\n            <section className=\"groupSection\">\n              <div className=\"groupImage\" onClick={() => setCamera(true)}>\n                {image ? (\n                  <img\n                    src={\n                      image.startsWith(\"http\") || image.startsWith(\"data:\")\n                        ? image\n                        : `${apiUrl}${image}`\n                    }\n                    alt=\"Team\"\n                  />\n                ) : (\n                  <Camera />\n                )}\n              </div>\n              <div>\n                <input type=\"text\" id=\"teamName\" defaultValue={group.name} name=\"teamName\" placeholder=\"Team naam\" required />\n                <input type=\"text\" id=\"klas\" defaultValue={group.class} name=\"klas\" placeholder=\"Klas\" required />\n              </div>\n            </section>\n\n            <ul className=\"editStudents\" ref={oldStudentsRef}>\n              {group.students.map((student, idx) => (\n                <li key={idx}>\n                  <input type=\"number\" defaultValue={student.student_number} />\n                  <input type=\"text\" defaultValue={student.name} />\n                  <Trashcan className=\"trashcan\" onClick={() => removeExistingStudent(student.student_number, student.name)} />\n                </li>\n              ))}\n            </ul>\n\n            <ul className=\"editStudents\" ref={newStudentsRef}>\n              {newStudents.map((student, idx) => (\n                <li key={idx}>\n                  <input type=\"number\" placeholder={student.student_number} />\n                  <input type=\"text\" placeholder={student.name} />\n                  <Trashcan className=\"trashcan\" onClick={() => setNewStudents(newStudents.filter((_, i) => i !== idx))} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"editButtons\">\n              <button type=\"button\" onClick={() => setNewStudents([...newStudents, { name: '', student_number: '' }])}>Student toevoegen</button>\n              <button type=\"submit\">Opslaan</button>\n            </div>\n          </form>\n        )}\n      </div>\n    </ModalComponent>\n  );\n};\n\nexport default EditGroup;\n","import React, { useState, useEffect } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport \"./AddPoints.css\";\nimport { updatePoints } from \"../../helpers/data/dataLayer\";\n\nconst AddPoints = ({\n    group,\n    openModal,\n    closeModal,\n}) => {\n    const [pointsState, setPointsState] = useState([]);\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    useEffect(() => {\n        if (group && group.challenges) {\n            setPointsState(group.challenges.map(c => c.points || ''));\n        }\n    }, [group]);\n\n    const handleChange = (idx, value) => {\n        setPointsState(prev => {\n            const newState = [...prev];\n            newState[idx] = value;\n            return newState;\n        });\n    };\n\n    const submitPoints = (e) => {\n        e.preventDefault();\n\n        const pointsData = group.challenges.map((challenge, idx) => ({\n            challengeId: challenge.id,\n            points: pointsState[idx]\n        }));\n\n        updatePoints(group.id, pointsData)\n            .then(response => {\n                console.log('Server response:', response);\n                // Optionally: close modal or show success message\n                closeModal();\n            })\n            .catch(error => console.error('Error updating points:', error));\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal === group.id}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            contentLabel=\"Points\"\n            customStyles={customStyles}\n        >\n            <form className=\"editPoints\" onSubmit={submitPoints}>\n                {group.challenges.map((challenge, idx) => (\n                    <li key={challenge.id}>\n                        <h3>{challenge.name}</h3>\n                        <input\n                            placeholder={pointsState[idx] || 0} // show current points\n                            value={pointsState[idx]}\n                            onChange={(e) => handleChange(idx, e.target.value)}\n                        />\n                    </li>\n                ))}\n                <div className=\"editButtons\">\n                    <button type=\"submit\">Opslaan</button>\n                </div>\n            </form>\n        </ModalComponent>\n    );\n};\n\nexport default AddPoints;\n","import React, { useState } from \"react\";\nimport \"./Groups.css\";\nimport EditGroup from \"./../Modal/EditGroup\";\nimport AddPoints from \"./../Modal/AddPoints\";\n// import Close from \"./../../helpers/icons/Close\";\n// import Check from \"./../../helpers/icons/Check\";\n// import Copy from  \"./../../helpers/icons/Copy\";\nimport { removeTeam } from \"./../../helpers/data/dataLayer\";\n// import TimeScoring from \"../TimeScoring/TimeScoring\";\n\nconst Groups = ({\n    groups,\n    setGroups,\n    setFilteredGroups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [openPointsModal, setOpenOpointsModal] = useState(null);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const closeModal = () => setOpenModal(null);\n    const closePointsModal = () => setOpenOpointsModal(null);\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n\n    // const toggleCode = (event, code) => {\n    //     if (visibleCodes.includes(code)) {\n    //         setVisibleCodes(visibleCodes.filter((c) => c !== code));\n    //     } else {\n    //         setVisibleCodes([...visibleCodes, code]);\n    //     }\n    //     event.stopPropagation();\n    // }\n\n    // const copyCode = (event, code) => {\n    //     navigator.clipboard.writeText(code);\n    //     event.stopPropagation();\n    //     event.target.closest(\"li\").querySelector('.checkmark').classList.add('show');\n    //     event.target.closest(\"li\").querySelector('.copy').classList.add('hide');\n    //     setTimeout(() => {\n    //         event.target.closest(\"li\").querySelector('.checkmark').classList.remove('show');\n    //         event.target.closest(\"li\").querySelector('.copy').classList.remove('hide');\n    //     }, 2000);\n    // }\n\n    const removeGroup = (e, group, classTitle, groupId) => {\n        e.stopPropagation();\n        if (window.confirm(`Weet je zeker dat je groep ${group} uit klas ${classTitle} wilt verwijderen?`)) {\n            removeTeam(groupId).then(res => {\n                // Reload the page to show the updated group list\n                setTimeout(() => {\n                    window.location.reload();\n                }, 500);\n            });\n        } else {\n            // Do nothing\n        }\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                    <h1>Max score</h1>\n                </div>\n                <div className=\"timeScoringHeader\">\n                    <h1>Scores</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {groups && groups.length > 0 && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx} onClick={() => { openSpecificModal(group.id) }}>\n                                <section className=\"groupSection\">\n                                    <div className=\"groupImage\">\n                                        {group.image_url && group.image_url !== '' && group.name && (\n                                            <img\n                                                src={\n                                                    group.image_url.startsWith('http') ||\n                                                        group.image_url.startsWith('data:')\n                                                        ? group.image_url\n                                                        : `${apiUrl}${group.image_url}`\n                                                }\n                                                alt={group.name}\n                                            />\n                                        )}\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                        <button className=\"deleteGroup\" onClick={(e) => { removeGroup(e, group.name, group.class, group.id) }}>Verwijder groep</button>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                {group.students.length > 0 && (\n                                    <section className=\"studentsSection\">\n                                        <ul>\n                                            {group.students.map((student, idx) => (\n                                                <li key={idx}>\n                                                    <p>{student.student_number}</p>\n                                                    <p>{student.name}</p>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </section>\n                                )}\n                                {/* Challenges */}\n                                {group.challenges.length > 0 && (\n                                    <>\n                                        <section className=\"challengesSection\" >\n                                            <ul>\n                                                {group.challenges.map((challenge, idx) => (\n                                                    <li key={idx}>\n                                                        <h3>{challenge.name}</h3>\n                                                        <div>1000</div>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section>\n\n\n                                        {/* <section className=\"timeScoring\">\n                                            {group.challenges.map((challenge) => (                                        \n                                                <TimeScoring challenge={challenge} group_id={group.id} />\n                                            ))}                                            \n                                        </section> */}\n\n                                        {/* <section className=\"challengeKeys\">\n                                            <ul key={idx}>\n                                                {group.challenges.map((challenge, idx) => (                                        \n                                                    <li key={idx}>\n                                                        <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'} onClick={(e) => { toggleCode(e, challenge.keycode)}}>{challenge.keycode}</h3>\n                                                        <Copy className={'copy'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                        <Check className={'checkmark green hide'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section> */}\n                                    </>\n                                )}\n                                <section className=\"pointsSection\" >\n                                    <span>({group.challenges.reduce((sum, c) => sum + (c.points || 0), 0)})</span>\n                                    <button className=\"addPoints\" onClick={(e) => { e.stopPropagation(); setOpenOpointsModal(group.id); }}>\n                                        Punten toevoegen\n                                    </button>\n                                </section>\n                            </li>\n                            <EditGroup\n                                group={group}\n                                openModal={openModal}\n                                closeModal={closeModal}\n                                apiUrl={apiUrl}\n                                setGroups={setGroups}\n                                setFilteredGroups={setFilteredGroups}\n                            />\n                            <AddPoints\n                                group={group}\n                                openModal={openPointsModal}\n                                closeModal={closePointsModal}\n                            />\n                        </>\n                    ))}\n                </ul>\n            </section>\n        </>\n    );\n}\n\nexport default Groups;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { createTeam } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./NewGroup.css\";\n\nconst NewGroup = ({\n    openModal,\n    closeModal,\n    setGroups,\n    setFilteredGroups\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([0]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(null);\n    const [teamSuccessfullyCreated, setTeamSuccessfullyCreated] = useState(false);\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const takePhotoRef = useRef(null);\n    const studentsRef = useRef(null);\n\n    const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    // Firefox currently has a bug where the height can't be read from\n                    // the video, so we will make assumptions if this happens.\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    function clearPicture() {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const createTeamInComp = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        let students = studentsRef.current.children;\n        students = Array.from(students).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n        formData.append('students', JSON.stringify(students));\n        \n        const handleCreateTeam = async (formData, setTeamSuccessfullyCreated) => {\n            await createTeam(formData, setTeamSuccessfullyCreated)\n                .then(() => {\n                    // Update UI instead of reloading the page\n                    const fetchData = async () => {\n                        const data = await dataLayer();\n                        setGroups(data);\n                        setFilteredGroups(data);\n                    };\n                    fetchData();\n                    closeModal();\n                })\n                .catch((error) => {\n                    // Optionally, show an error notification to the user\n                    console.error('Failed to create team:', error);                    \n                });\n        };\n\n        handleCreateTeam(formData, setTeamSuccessfullyCreated);\n    };\n\n    useEffect(() => {\n        camera && getVideoStream();\n    }, [camera]);\n\n    useEffect(() => {\n        setWidth(600);\n    }, []);\n\n    useEffect(() => {\n        if (teamSuccessfullyCreated) {\n            closeModal();\n        }\n    }, [teamSuccessfullyCreated])\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"New group\"\n        >\n            <div className=\"newGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} ref={takePhotoRef} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { createTeamInComp(e) }}>\n                        <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={image} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"addStudents\" ref={studentsRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={\"Studentnummer\"} required />\n                                    <input type=\"text\" placeholder={\"Student naam\"} required />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"addButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type={'submit'}>Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default NewGroup;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\nimport NewGroup from \"../components/Modal/NewGroup\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  \n  const closeModal = () => setOpenModal(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n      const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n      return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (\n    <>\n      {isTeacher && (\n        <main>\n          <Filter\n            filters={filters}\n            setFilters={setFilters}\n            setOpenModal={setOpenModal}\n          />\n          {filteredGroups.length > 0 ? (\n            <Groups \n              groups={filteredGroups} \n              setGroups={setGroups}\n              setFilteredGroups={setFilteredGroups}\n            />\n          ) : (\n            <div className=\"nothingFound\">\n              Geen groepen gevonden.\n            </div>\n          )}\n          <NewGroup \n            openModal={openModal}\n            closeModal={closeModal}\n            setGroups={setGroups}\n            setFilteredGroups={setFilteredGroups}\n          />\n        </main>\n      )}\n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["filters","setFilters","setOpenModal","id","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","className","async","response","fetch","method","credentials","ok","Error","status","data","json","console","log","message","navigate","error","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","fill","height","viewBox","xmlns","d","version","width","clipRule","fillRule","group","openModal","setGroups","setFilteredGroups","apiUrl","camera","setCamera","streaming","setStreaming","hasTakenPicture","setHasTakenPicture","newStudents","setNewStudents","setWidth","setHeight","image","setImage","image_url","videoRef","useRef","canvasRef","photoRef","oldStudentsRef","newStudentsRef","clearPicture","current","context","getContext","fillStyle","fillRect","toDataURL","setAttribute","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","play","onloadedmetadata","calculatedWidth","calculatedHeight","videoHeight","videoWidth","err","getVideoStream","Modal","content","top","left","right","bottom","marginRight","transform","ref","drawImage","dataURL","alt","onSubmit","preventDefault","oldStudents","Array","from","map","student","name","querySelector","student_number","newStudentsData","formData","FormData","append","elements","group_id","teamName","klas","toLowerCase","JSON","stringify","startsWith","res","blob","editGroup","dataLayer","alert","required","src","defaultValue","class","students","idx","key","removeExistingStudent","studentNumber","studentName","window","confirm","removeStudent","then","catch","filter","_","i","pointsState","setPointsState","challenges","c","points","pointsData","challenge","challengeId","updatePoints","prev","newState","handleChange","groups","openPointsModal","setOpenOpointsModal","visibleCodes","setVisibleCodes","closePointsModal","length","modalName","classTitle","groupId","stopPropagation","removeTeam","setTimeout","location","reload","removeGroup","reduce","sum","teamSuccessfullyCreated","setTeamSuccessfullyCreated","cameraRef","takePhotoRef","studentsRef","offsetHeight","offsetWidth","addEventListener","isNaN","takePicture","number","createTeam","fetchData","handleCreateTeam","createTeamInComp","onKeyDown","filteredGroups","isTeacher","setIsTeacher","checkSession","searchQueryGroup","searchedGroups","includes","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}