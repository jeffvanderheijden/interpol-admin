{"version":3,"file":"component---src-pages-dashboard-js-1b83d3d3e8cc4dc16a86.js","mappings":"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","sources":["webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Trashcan.js","webpack://admin-panel/./src/helpers/icons/Camera.js","webpack://admin-panel/./src/components/Modal/EditGroup.js","webpack://admin-panel/./src/components/Modal/AddPoints.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/components/Modal/NewGroup.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters,\n    setOpenModal\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { setOpenModal(true) }}>Groep toevoegen</button>\n            <button className={\"logout\"} onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Trashcan = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} fill=\"red\" height=\"18\" viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M767 336H233q-12 0-21 9t-9 21l38 505q1 13 12 21.5t30 8.5h434q18 0 29-8.5t13-21.5l38-505q0-12-9-21t-21-9zM344 841q-10 0-18-9t-8-21l-26-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5l18 386q0 12-7.5 21t-18.5 9zm182-31q0 13-7.5 22t-18.5 9-18.5-9-7.5-22l-4-385q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm156 1q0 12-8 21t-18 9q-11 0-18.5-9t-7.5-21l18-386q0-12 9-20.5t21-8.5 21 8.5 9 20.5zm101-605l-179-30q-12-2-15-15l-8-33q-4-20-14-26-6-3-22-3h-90q-16 0-23 3-10 6-13 26l-8 33q-2 13-15 15l-179 30q-19 3-31.5 14.5T173 249v28q0 9 6.5 15t15.5 6h610q9 0 15.5-6t6.5-15v-28q0-17-12.5-28.5T783 206z\"/></svg>\n    )\n}\n\nexport default Trashcan;","import React from 'react';\n\nconst Camera = () => {\n    return (\n        <svg height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"camera\">\n                <path clipRule=\"evenodd\" d=\"M16,10.001c-4.419,0-8,3.581-8,8c0,4.418,3.581,8,8,8 c4.418,0,8-3.582,8-8C24,13.583,20.418,10.001,16,10.001z M20.555,21.906c-2.156,2.516-5.943,2.807-8.459,0.65 c-2.517-2.156-2.807-5.944-0.65-8.459c2.155-2.517,5.943-2.807,8.459-0.65C22.42,15.602,22.711,19.391,20.555,21.906z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M16,14.001c-2.209,0-3.999,1.791-4,3.999v0.002 c0,0.275,0.224,0.5,0.5,0.5s0.5-0.225,0.5-0.5V18c0.001-1.656,1.343-2.999,3-2.999c0.276,0,0.5-0.224,0.5-0.5 S16.276,14.001,16,14.001z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n                <path clipRule=\"evenodd\" d=\"M29.492,9.042l-4.334-0.723l-1.373-3.434 C23.326,3.74,22.232,3,21,3H11C9.768,3,8.674,3.74,8.214,4.886L6.842,8.319L2.509,9.042C1.055,9.283,0,10.527,0,12v15 c0,1.654,1.346,3,3,3h26c1.654,0,3-1.346,3-3V12C32,10.527,30.945,9.283,29.492,9.042z M30,27c0,0.553-0.447,1-1,1H3 c-0.553,0-1-0.447-1-1V12c0-0.489,0.354-0.906,0.836-0.986l5.444-0.907l1.791-4.478C10.224,5.25,10.591,5,11,5h10 c0.408,0,0.775,0.249,0.928,0.629l1.791,4.478l5.445,0.907C29.646,11.094,30,11.511,30,12V27z\" fill=\"#333333\" fillRule=\"evenodd\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport default Camera;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { editGroup, removeStudent } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./EditGroup.css\";\n\nconst EditGroup = ({ group, openModal, closeModal, setGroups, setFilteredGroups }) => {\n    // Camera & image state\n    const [cameraActive, setCameraActive] = useState(false);\n    const [stream, setStream] = useState(null);\n    const [image, setImage] = useState(group.image_url || null);\n    const [hasTakenPicture, setHasTakenPicture] = useState(false);\n\n    // Students state\n    const [oldStudents, setOldStudents] = useState([]);\n    const [newStudents, setNewStudents] = useState([]);\n\n    // Refs\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    // Initialize students when modal opens\n    useEffect(() => {\n        if (openModal === group.id) {\n            setOldStudents(group.students || []);\n            setNewStudents([]);\n            setCameraActive(false);\n            setHasTakenPicture(false);\n            setImage(group.image_url || null);\n        }\n    }, [openModal, group]);\n\n    // Camera stream\n    useEffect(() => {\n        const startCamera = async () => {\n            try {\n                const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = mediaStream;\n                    videoRef.current.play();\n                    setStream(mediaStream);\n                }\n            } catch (err) {\n                console.error(\"Failed to access webcam:\", err);\n            }\n        };\n\n        if (cameraActive) startCamera();\n        else if (stream) {\n            // Stop previous stream when closing camera\n            stream.getTracks().forEach(track => track.stop());\n            setStream(null);\n        }\n\n        return () => {\n            if (stream) stream.getTracks().forEach(track => track.stop());\n        };\n    }, [cameraActive]);\n\n    // Take picture\n    const takePicture = () => {\n        if (!videoRef.current || !canvasRef.current) return;\n        const width = 320;\n        const height = videoRef.current.videoHeight / (videoRef.current.videoWidth / width);\n        canvasRef.current.width = width;\n        canvasRef.current.height = height;\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.drawImage(videoRef.current, 0, 0, width, height);\n        const dataURL = canvasRef.current.toDataURL(\"image/png\");\n        setImage(dataURL);\n        setHasTakenPicture(true);\n        setCameraActive(false);\n        stream && stream.getTracks().forEach(track => track.stop());\n    };\n\n    // Remove student\n    const removeOldStudent = async (student_number) => {\n        if (window.confirm(\"Weet je zeker dat je deze student wilt verwijderen?\")) {\n            try {\n                await removeStudent(student_number);\n                const data = await dataLayer();\n                setGroups(data);\n                setFilteredGroups(data);\n            } catch (err) {\n                console.error(\"Error removing student:\", err);\n            }\n        }\n    };\n\n    // Save group changes\n    const saveGroupChanges = async (e) => {\n        e.preventDefault();\n        const payload = {\n            group_id: group.id,\n            name: e.target.teamName.value,\n            class: e.target.klas.value.toLowerCase(),\n            image,\n            students: JSON.stringify([...oldStudents, ...newStudents])\n        };\n\n        try {\n            await editGroup(payload);\n            const data = await dataLayer();\n            setGroups(data);\n            setFilteredGroups(data);\n            closeModal();\n        } catch (err) {\n            console.error(\"Error saving group:\", err);\n        }\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal === group.id}\n            closeModal={closeModal}\n            customStyles={{\n                content: {\n                    top: '50%',\n                    left: '50%',\n                    right: 'auto',\n                    bottom: 'auto',\n                    marginRight: '-50%',\n                    transform: 'translate(-50%, -50%)',\n                },\n            }}\n            contentLabel=\"Edit group\"\n        >\n            <div className=\"editGroup\">\n                {cameraActive ? (\n                    <div className=\"camera\">\n                        <video ref={videoRef} />\n                        <button type=\"button\" onClick={takePicture}>Neem foto</button>\n                        <button type=\"button\" onClick={() => setCameraActive(false)}>Annuleer</button>\n                        <canvas ref={canvasRef} style={{ display: 'none' }} />\n                    </div>\n                ) : (\n                    <form onSubmit={saveGroupChanges}>\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => setCameraActive(true)}>\n                                {image ? <img src={image.startsWith('data:') ? image : `https://api.interpol.sd-lab.nl/${image}`} alt=\"Team\" /> : <Camera />}\n                            </div>\n                            <div>\n                                <input type=\"text\" name=\"teamName\" defaultValue={group.name} placeholder=\"Team naam\" required />\n                                <input type=\"text\" name=\"klas\" defaultValue={group.class} placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n\n                        <h4>Huidige studenten</h4>\n                        <ul className=\"editStudents\">\n                            {oldStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input\n                                        type=\"number\"\n                                        value={student.student_number}\n                                        onChange={(e) => {\n                                            const updated = [...oldStudents];\n                                            updated[idx].student_number = e.target.value;\n                                            setOldStudents(updated);\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        value={student.name}\n                                        onChange={(e) => {\n                                            const updated = [...oldStudents];\n                                            updated[idx].name = e.target.value;\n                                            setOldStudents(updated);\n                                        }}\n                                    />\n                                    <Trashcan onClick={() => removeOldStudent(student.student_number)} />\n                                </li>\n                            ))}\n                        </ul>\n\n                        <h4>Nieuwe studenten</h4>\n                        <ul className=\"editStudents\">\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input\n                                        type=\"number\"\n                                        value={student.student_number}\n                                        onChange={(e) => {\n                                            const updated = [...newStudents];\n                                            updated[idx].student_number = e.target.value;\n                                            setNewStudents(updated);\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        value={student.name}\n                                        onChange={(e) => {\n                                            const updated = [...newStudents];\n                                            updated[idx].name = e.target.value;\n                                            setNewStudents(updated);\n                                        }}\n                                    />\n                                    <Trashcan onClick={() => setNewStudents(newStudents.filter((_, i) => i !== idx))} />\n                                </li>\n                            ))}\n                        </ul>\n\n                        <button type=\"button\" onClick={() => setNewStudents([...newStudents, { name: '', student_number: '' }])}>\n                            Voeg student toe\n                        </button>\n                        <button type=\"submit\">Opslaan</button>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n};\n\nexport default EditGroup;\n","import React, { useState, useEffect } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport \"./AddPoints.css\";\nimport { updatePoints } from \"../../helpers/data/dataLayer\";\n\nconst AddPoints = ({\n    group,\n    openModal,\n    closeModal,\n}) => {\n    const [pointsState, setPointsState] = useState([]);\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    useEffect(() => {\n        if (group && group.challenges) {\n            setPointsState(group.challenges.map(c => c.points || ''));\n        }\n    }, [group]);\n\n    const handleChange = (idx, value) => {\n        setPointsState(prev => {\n            const newState = [...prev];\n            newState[idx] = value;\n            return newState;\n        });\n    };\n\n    const submitPoints = (e) => {\n        e.preventDefault();\n\n        const pointsData = group.challenges.map((challenge, idx) => ({\n            challengeId: challenge.id,\n            points: pointsState[idx]\n        }));\n\n        updatePoints(group.id, pointsData)\n            .then(response => {\n                console.log('Server response:', response);\n                // Optionally: close modal or show success message\n                closeModal();\n            })\n            .catch(error => console.error('Error updating points:', error));\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal === group.id}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            contentLabel=\"Points\"\n            customStyles={customStyles}\n        >\n            <form className=\"editPoints\" onSubmit={submitPoints}>\n                {group.challenges.map((challenge, idx) => (\n                    <li key={challenge.id}>\n                        <h3>{challenge.name}</h3>\n                        <input\n                            placeholder={pointsState[idx] || 0} // show current points\n                            value={pointsState[idx]}\n                            onChange={(e) => handleChange(idx, e.target.value)}\n                        />\n                    </li>\n                ))}\n                <div className=\"editButtons\">\n                    <button type=\"submit\">Opslaan</button>\n                </div>\n            </form>\n        </ModalComponent>\n    );\n};\n\nexport default AddPoints;\n","import React, { useState } from \"react\";\nimport \"./Groups.css\";\nimport EditGroup from \"./../Modal/EditGroup\";\nimport AddPoints from \"./../Modal/AddPoints\";\n// import Close from \"./../../helpers/icons/Close\";\n// import Check from \"./../../helpers/icons/Check\";\n// import Copy from  \"./../../helpers/icons/Copy\";\nimport { removeTeam } from \"./../../helpers/data/dataLayer\";\n// import TimeScoring from \"../TimeScoring/TimeScoring\";\n\nconst Groups = ({\n    groups,\n    setGroups,\n    setFilteredGroups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [openPointsModal, setOpenOpointsModal] = useState(null);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const closeModal = () => setOpenModal(null);\n    const closePointsModal = () => setOpenOpointsModal(null);\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n\n    // const toggleCode = (event, code) => {\n    //     if (visibleCodes.includes(code)) {\n    //         setVisibleCodes(visibleCodes.filter((c) => c !== code));\n    //     } else {\n    //         setVisibleCodes([...visibleCodes, code]);\n    //     }\n    //     event.stopPropagation();\n    // }\n\n    // const copyCode = (event, code) => {\n    //     navigator.clipboard.writeText(code);\n    //     event.stopPropagation();\n    //     event.target.closest(\"li\").querySelector('.checkmark').classList.add('show');\n    //     event.target.closest(\"li\").querySelector('.copy').classList.add('hide');\n    //     setTimeout(() => {\n    //         event.target.closest(\"li\").querySelector('.checkmark').classList.remove('show');\n    //         event.target.closest(\"li\").querySelector('.copy').classList.remove('hide');\n    //     }, 2000);\n    // }\n\n    const removeGroup = (e, group, classTitle, groupId) => {\n        e.stopPropagation();\n        if (window.confirm(`Weet je zeker dat je groep ${group} uit klas ${classTitle} wilt verwijderen?`)) {\n            removeTeam(groupId).then(res => {\n                // Reload the page to show the updated group list\n                setTimeout(() => {\n                    window.location.reload();\n                }, 500);\n            });\n        } else {\n            // Do nothing\n        }\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                    <h1>Max score</h1>\n                </div>\n                <div className=\"timeScoringHeader\">\n                    <h1>Scores</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {groups && groups.length > 0 && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx} onClick={() => { openSpecificModal(group.id) }}>\n                                <section className=\"groupSection\">\n                                    <div className=\"groupImage\">\n                                        {group.image_url && group.image_url !== '' && group.name && ( <img src={`${apiUrl + group.image_url}`} alt={group.name} /> )}\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                        <button className=\"deleteGroup\" onClick={(e) => { removeGroup(e, group.name, group.class, group.id) }}>Verwijder groep</button>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                {group.students.length > 0 && (\n                                    <section className=\"studentsSection\">\n                                        <ul>\n                                            {group.students.map((student, idx) => (\n                                                <li key={idx}>\n                                                    <p>{student.student_number}</p>\n                                                    <p>{student.name}</p>                                        \n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </section>\n                                )}\n                                {/* Challenges */}\n                                {group.challenges.length > 0 && (\n                                    <>\n                                        <section className=\"challengesSection\" >\n                                            <ul>\n                                                {group.challenges.map((challenge, idx) => (\n                                                    <li key={idx}>\n                                                        <h3>{challenge.name}</h3>\n                                                        <div>1000</div>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section>\n                                        \n\n                                        {/* <section className=\"timeScoring\">\n                                            {group.challenges.map((challenge) => (                                        \n                                                <TimeScoring challenge={challenge} group_id={group.id} />\n                                            ))}                                            \n                                        </section> */}\n\n                                        {/* <section className=\"challengeKeys\">\n                                            <ul key={idx}>\n                                                {group.challenges.map((challenge, idx) => (                                        \n                                                    <li key={idx}>\n                                                        <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'} onClick={(e) => { toggleCode(e, challenge.keycode)}}>{challenge.keycode}</h3>\n                                                        <Copy className={'copy'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                        <Check className={'checkmark green hide'} onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </section> */}\n                                    </>\n                                )}\n                                <section className=\"pointsSection\" >\n                                    <span>({group.challenges.reduce((sum, c) => sum + (c.points || 0), 0)})</span>\n                                    <button className=\"addPoints\" onClick={(e) => { e.stopPropagation(); setOpenOpointsModal(group.id); }}>\n                                        Punten toevoegen\n                                    </button>\n                                </section>\n                            </li>\n                            <EditGroup \n                                group={group} \n                                openModal={openModal} \n                                closeModal={closeModal} \n                                apiUrl={apiUrl}\n                                setGroups={setGroups}\n                                setFilteredGroups={setFilteredGroups}\n                            />\n                            <AddPoints \n                                group={group} \n                                openModal={openPointsModal} \n                                closeModal={closePointsModal} \n                            />\n                        </>\n                    ))}\n                </ul>                \n            </section>\n        </>\n    );\n}\n\nexport default Groups;","import React, { useState, useEffect, useRef } from \"react\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Trashcan from \"../../helpers/icons/Trashcan\";\nimport Camera from \"../../helpers/icons/Camera\";\nimport { createTeam } from \"./../../helpers/data/dataLayer\";\nimport dataLayer from \"./../../helpers/data/dataLayer\";\nimport \"./NewGroup.css\";\n\nconst NewGroup = ({\n    openModal,\n    closeModal,\n    setGroups,\n    setFilteredGroups\n}) => {    \n    const [camera, setCamera] = useState(false);\n    const [streaming, setStreaming] = useState(false);\n    const [newStudents, setNewStudents] = useState([0]);\n    const [width, setWidth] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [image, setImage] = useState(null);\n    const [teamSuccessfullyCreated, setTeamSuccessfullyCreated] = useState(false);\n\n    const cameraRef = useRef(null);\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const photoRef = useRef(null);\n    const takePhotoRef = useRef(null);\n    const studentsRef = useRef(null);\n\n    const getVideoStream = async () => {\n        try {\n            clearPicture();\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            if (videoRef && videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.addEventListener(\"loadedmetadata\", () => {\n                    videoRef.current.play();\n                });\n            } else {\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        if (videoRef && videoRef.current) {\n            videoRef.current.addEventListener(\"canplay\", () => {\n                if (!streaming) {\n                    setHeight(videoRef.current.videoHeight / (videoRef.current.videoWidth / width));\n\n                    // Firefox currently has a bug where the height can't be read from\n                    // the video, so we will make assumptions if this happens.\n\n                    if (isNaN(height)) {\n                        setHeight(width / (4 / 3));\n                    }\n\n                    videoRef.current.setAttribute(\"width\", width);\n                    videoRef.current.setAttribute(\"height\", height);\n                    canvasRef.current.setAttribute(\"width\", width);\n                    canvasRef.current.setAttribute(\"height\", height);\n                    setStreaming(true);\n                }\n            }, false);\n        }\n    }\n\n    function clearPicture() {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, canvasRef.current.offsetHeight, canvasRef.current.offsetWidth);\n\n            const data = canvasRef.current.toDataURL(\"image/png\");\n            photoRef.current.setAttribute(\"src\", data);\n        }\n    }\n\n    const takePicture = (e) => {\n        if (canvasRef && canvasRef.current && photoRef && photoRef.current && videoRef && videoRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (width && height) {\n                canvasRef.current.width = width;\n                canvasRef.current.height = height;\n                context.drawImage(videoRef.current, 0, 0, width, height);\n\n                const data = canvasRef.current.toDataURL(\"image/png\");\n                setImage(data);\n                photoRef.current.setAttribute(\"src\", data);\n            } else {\n                clearPicture();\n            }\n        }\n        e.preventDefault();\n    }\n\n    const createTeamInComp = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', image);\n        formData.append('name', e.target.elements.teamName.value);\n        formData.append('class', e.target.elements.klas.value.toLowerCase());\n        let students = studentsRef.current.children;\n        students = Array.from(students).map(student => {\n            return {\n                name: student.querySelector('input[type=\"text\"]').value,\n                number: student.querySelector('input[type=\"number\"]').value\n            }\n        });\n        formData.append('students', JSON.stringify(students));\n        \n        const handleCreateTeam = async (formData, setTeamSuccessfullyCreated) => {\n            await createTeam(formData, setTeamSuccessfullyCreated)\n                .then(() => {\n                    // Update UI instead of reloading the page\n                    const fetchData = async () => {\n                        const data = await dataLayer();\n                        setGroups(data);\n                        setFilteredGroups(data);\n                    };\n                    fetchData();\n                    closeModal();\n                })\n                .catch((error) => {\n                    // Optionally, show an error notification to the user\n                    console.error('Failed to create team:', error);                    \n                });\n        };\n\n        handleCreateTeam(formData, setTeamSuccessfullyCreated);\n    };\n\n    useEffect(() => {\n        camera && getVideoStream();\n    }, [camera]);\n\n    useEffect(() => {\n        setWidth(600);\n    }, []);\n\n    useEffect(() => {\n        if (teamSuccessfullyCreated) {\n            closeModal();\n        }\n    }, [teamSuccessfullyCreated])\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    return (\n        <ModalComponent\n            modalIsOpen={openModal}\n            afterOpenModal={null}\n            closeModal={closeModal}\n            customStyles={customStyles}\n            contentLabel=\"New group\"\n        >\n            <div className=\"newGroup\">\n                {camera ? (\n                    <div className=\"camera\" ref={cameraRef}>\n                        <video ref={videoRef} id=\"video\">Video stream not available.</video>\n                        <div className=\"buttonWrapper\">\n                            <button onClick={(e) => { takePicture(e) }} ref={takePhotoRef} type=\"button\" id=\"startbutton\" className=\"btn\"><span>Take photo</span></button>\n                            <button onClick={() => { setCamera(false) }} type=\"button\" id=\"savebutton\" className=\"btn\"><span>Save photo</span></button>\n                        </div>\n                        <div className=\"output\">\n                            <div className=\"imgWrapper\">\n                                <img ref={photoRef} id=\"photo\" alt=\"Team image\" />\n                            </div>\n                            <canvas id=\"canvas\" ref={canvasRef} />\n                        </div>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { createTeamInComp(e) }}>\n                        <input type=\"hidden\" id=\"image\" name=\"image\" value={image} required />\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\" onClick={() => { setCamera(true) }} onKeyDown={() => { setCamera(true) }}>\n                                {image ? (\n                                    <img src={image} alt=\"Team\" />\n                                ) : (\n                                    <Camera />\n                                )}\n                            </div>\n                            <div>\n                                <input type=\"text\" id=\"teamName\" name=\"teamName\" placeholder=\"Team naam\" required />\n                                <input type=\"text\" id=\"klas\" name=\"klas\" placeholder=\"Klas\" required />\n                            </div>\n                        </section>\n                        <ul className=\"addStudents\" ref={studentsRef}>\n                            {newStudents.map((student, idx) => (\n                                <li key={idx}>\n                                    <input type=\"number\" placeholder={\"Studentnummer\"} required />\n                                    <input type=\"text\" placeholder={\"Student naam\"} required />\n                                    <Trashcan className={'trashcan'} onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }} />\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"addButtons\">\n                            <button onClick={(e) => { e.preventDefault(); setNewStudents([...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                            <button type={'submit'}>Opslaan</button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </ModalComponent>\n    );\n}\n\nexport default NewGroup;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\nimport NewGroup from \"../components/Modal/NewGroup\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  \n  const closeModal = () => setOpenModal(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n      const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n      return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (\n    <>\n      {isTeacher && (\n        <main>\n          <Filter\n            filters={filters}\n            setFilters={setFilters}\n            setOpenModal={setOpenModal}\n          />\n          {filteredGroups.length > 0 ? (\n            <Groups \n              groups={filteredGroups} \n              setGroups={setGroups}\n              setFilteredGroups={setFilteredGroups}\n            />\n          ) : (\n            <div className=\"nothingFound\">\n              Geen groepen gevonden.\n            </div>\n          )}\n          <NewGroup \n            openModal={openModal}\n            closeModal={closeModal}\n            setGroups={setGroups}\n            setFilteredGroups={setFilteredGroups}\n          />\n        </main>\n      )}\n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["filters","setFilters","setOpenModal","id","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","className","async","response","fetch","method","credentials","ok","Error","status","data","json","console","log","message","navigate","error","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","fill","height","viewBox","xmlns","d","version","width","clipRule","fillRule","group","openModal","setGroups","setFilteredGroups","cameraActive","setCameraActive","stream","setStream","image","setImage","image_url","hasTakenPicture","setHasTakenPicture","oldStudents","setOldStudents","newStudents","setNewStudents","videoRef","useRef","canvasRef","students","mediaStream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","err","startCamera","getTracks","forEach","track","stop","Modal","content","top","left","right","bottom","marginRight","transform","ref","videoHeight","videoWidth","getContext","drawImage","dataURL","toDataURL","display","onSubmit","preventDefault","payload","group_id","name","teamName","class","klas","toLowerCase","JSON","stringify","editGroup","dataLayer","src","startsWith","alt","defaultValue","required","map","student","idx","key","student_number","updated","window","confirm","removeStudent","removeOldStudent","filter","_","i","pointsState","setPointsState","challenges","c","points","pointsData","challenge","challengeId","updatePoints","then","catch","prev","newState","handleChange","groups","apiUrl","openPointsModal","setOpenOpointsModal","visibleCodes","setVisibleCodes","closePointsModal","length","modalName","classTitle","groupId","stopPropagation","removeTeam","res","setTimeout","location","reload","removeGroup","reduce","sum","camera","setCamera","streaming","setStreaming","setWidth","setHeight","teamSuccessfullyCreated","setTeamSuccessfullyCreated","cameraRef","photoRef","takePhotoRef","studentsRef","clearPicture","context","fillStyle","fillRect","offsetHeight","offsetWidth","setAttribute","audio","addEventListener","isNaN","getVideoStream","takePicture","formData","FormData","append","elements","Array","from","querySelector","number","createTeam","fetchData","handleCreateTeam","createTeamInComp","onKeyDown","filteredGroups","isTeacher","setIsTeacher","checkSession","searchQueryGroup","searchedGroups","includes","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}