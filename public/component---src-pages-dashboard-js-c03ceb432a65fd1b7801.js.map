{"version":3,"file":"component---src-pages-dashboard-js-c03ceb432a65fd1b7801.js","mappings":"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","sources":["webpack://admin-panel/./src/helpers/data/dataLayer.js","webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Modal/Modal.js","webpack://admin-panel/./src/helpers/icons/Close.js","webpack://admin-panel/./src/helpers/icons/Check.js","webpack://admin-panel/./src/helpers/icons/Copy.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["const api = \"https://api.interpol.sd-lab.nl/api\";\n\nexport const login = async (formData) => {\n    try {\n        const response = await fetch('https://api.interpol.sd-lab.nl/api/create-session', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include' // Ensure cookies are included with the request\n        });\n\n        const responseText = await response.text(); // Read the raw response body as text\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const loginResponse = JSON.parse(responseText); // Parse the response text as JSON\n\n        // Do something with the login response, e.g., handle login success or error\n        if (loginResponse.error) {\n            console.error('Login error:', loginResponse.error);\n            return loginResponse.error;\n        } else {\n            console.log('Login successful:', loginResponse.message);\n            return true;\n        }\n\n    } catch (error) {\n        console.error('Error creating session:', error);\n    }\n}\n\nexport const getStudents = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/students-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getGroups = async () => {\n    try {\n        const response = await fetch(`${api}/groups`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenges = async (groupId) => {\n    try {\n        const response = await fetch(`${api}/challenges-by-group?id=${groupId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const getChallenge = async (challengeId) => {\n    try {\n        const response = await fetch(`${api}/challenge-by-id?id=${challengeId}`);\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\nexport const removeStudent = async (studentId) => {\n    try {\n        const response = await fetch(`${api}/remove-student?id=${studentId}`, {\n            method: 'DELETE',\n            credentials: 'include'\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n}\n\nconst dataLayer = () => {\n    let groupsData = [];\n\n    const fetchAllData = async () => {\n        const groups = await getGroups();\n        if (groups.length > 0) {\n            for (const group of groups) {\n                let dataRow = group;\n\n                const students = await getStudents(group.id);\n                dataRow.students = students;\n\n                const challenges = await getChallenges(group.id);\n\n                for (const challenge of challenges) {\n                    await getChallenge(challenge.challenge_id)\n                        .then(data => {\n                            challenge['name'] = data[0].name;\n                            challenge['minimum_points'] = data[0].minimum_points;\n                            challenge['time_limit'] = data[0].time_limit;\n                        }).catch(error => console.error(error));\n                }\n                dataRow.challenges = challenges;\n\n                groupsData.push(dataRow);\n            }\n        } else {\n            console.warn('No groups found.');\n        }\n\n        return groupsData;\n    };\n\n    return fetchAllData();\n}\n\nexport const checkSession = async () => {\n    try {\n        const response = await fetch(`${api}/check-type`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error checking session:', userData.error);\n            return false;\n        }\n\n        // Check if user is logged in as DOCENT\n        return userData === 'DOCENT' ? true : false;\n\n    } catch (error) {\n        console.error('Error checking session:', error);\n        return false;\n    }\n}\n\nexport default dataLayer;","import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n\n    const logout = async () => {\n        try {\n            const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n                method: 'POST',\n                credentials: 'include' // Include cookies in the request\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Logout successful:', data.message);\n    \n            // Redirect to login page or perform other actions\n            navigate('/');\n    \n        } catch (error) {\n            console.error('Error logging out:', error);\n            // Handle error, e.g., display error message\n        }\n    }\n\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n            <button onClick={() => { logout() }}>Uitloggen</button>\n        </section>\n    );\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nconst ModalComponent = ({\n    modalIsOpen,\n    afterOpenModal,\n    closeModal,\n    customStyles,\n    contentLabel,\n    children\n}) => {\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel={contentLabel}\n        >\n            {children}\n        </Modal>\n    )\n}\n\nexport default ModalComponent;","import React from \"react\";\n\nconst Close = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n        </svg>\n    )\n}\n\nexport default Close;","import React from \"react\";\n\nconst Check = ({\n    onClick,\n    className\n}) => {\n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M4 12.6111L8.92308 17.5L20 6.5\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n    )\n}\n\nexport default Check;","import React from \"react\";\n\nconst Copy = ({\n    onClick,\n    className\n}) => { \n    return (\n        <svg onClick={onClick} className={className} height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21 8C21 6.34315 19.6569 5 18 5H10C8.34315 5 7 6.34315 7 8V20C7 21.6569 8.34315 23 10 23H18C19.6569 23 21 21.6569 21 20V8ZM19 8C19 7.44772 18.5523 7 18 7H10C9.44772 7 9 7.44772 9 8V20C9 20.5523 9.44772 21 10 21H18C18.5523 21 19 20.5523 19 20V8Z\" fill=\"#0F0F0F\"/>\n            <path d=\"M6 3H16C16.5523 3 17 2.55228 17 2C17 1.44772 16.5523 1 16 1H6C4.34315 1 3 2.34315 3 4V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V4C5 3.44772 5.44772 3 6 3Z\" fill=\"#0F0F0F\"/>\n        </svg>\n    );\n}\n\nexport default Copy;","import React, { useState, useEffect } from \"react\";\nimport \"./Groups.css\";\nimport ModalComponent from \"../Modal/Modal\";\nimport Eye from \"./../../helpers/icons/Eye\";\nimport Close from \"./../../helpers/icons/Close\";\nimport Check from \"./../../helpers/icons/Check\";\nimport Copy from  \"./../../helpers/icons/Copy\";\n\nconst Groups = ({\n    groups\n}) => {\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n    const [openModal, setOpenModal] = useState(null);\n    const [newStudents, setNewStudents] = useState([]);\n    const [visibleCodes, setVisibleCodes] = useState([]);\n\n    const openSpecificModal = (modalName) => setOpenModal(modalName);\n    const closeModal = () => setOpenModal(null);\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    // Reset new students when modal closes or they the extra input fields are always shown\n    useEffect(() => {\n        setNewStudents([]);\n    },[openModal]);\n\n    const toggleCode = (event, code) => {\n        if (visibleCodes.includes(code)) {\n            setVisibleCodes(visibleCodes.filter((c) => c !== code));\n        } else {\n            setVisibleCodes([...visibleCodes, code]);\n        }\n        event.stopPropagation();\n    }\n\n    const copyCode = (event, code) => {\n        navigator.clipboard.writeText(code);\n        event.stopPropagation();\n    }\n\n    const removeStudent = (studentNumber, groupId) => {\n        console.log(studentNumber, groupId);\n    }\n\n    return (\n        <>\n            <section id=\"groupHeaders\">\n                <div className=\"groupsHeader\">\n                    <h1>Groepen</h1>\n                </div>\n                <div className=\"studentsHeader\">\n                    <h1>Studentnummer</h1>\n                    <h1>Naam</h1>\n                </div>\n                <div className=\"challengesHeader\">\n                    <h1>Uitdagingen</h1>\n                </div>\n                <div className=\"challengeKeysHeader\">\n                    <h1>Code</h1>\n                </div>\n            </section>\n            <section id=\"groups\">\n                <ul id=\"group-tabs\">\n                    {/* Groups */}\n                    {groups && groups.map((group, idx) => (\n                        <>\n                            <li className=\"group\" key={idx} onClick={() => { openSpecificModal(group.id) }}>\n                                <section className=\"groupSection\">\n                                    <div className=\"groupImage\">\n                                        <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                                    </div>\n                                    <div>\n                                        <h2>{group.name}</h2>\n                                        <p>{group.class}</p>\n                                    </div>\n                                </section>\n                                {/* Students */}\n                                <section className=\"studentsSection\">\n                                    <ul>\n                                        {group.students.map((student, idx) => (\n                                            <li key={idx}>\n                                                <p>{student.student_number}</p>\n                                                <p>{student.name}</p>                                        \n                                            </li>\n                                        ))}\n                                    </ul>\n                                </section>\n                                {/* Challenges */}\n                                <section className=\"challengesSection\" >\n                                    {group.challenges.map((challenge, idx) => (\n                                        <ul key={idx}>\n                                            <li>\n                                                <h3>{challenge.name}</h3>\n                                                <div>\n                                                    {challenge.completed ? \n                                                        <span><Check className={'green'} /></span> : \n                                                        <span><Close className={'red'} /></span>\n                                                    }\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    ))}\n                                </section>\n                                {/* Challenge keys */}\n                                <section className=\"challengeKeys\">\n                                    {group.challenges.map((challenge, idx) => (\n                                        <ul key={idx}>\n                                            <li>\n                                                <h3 className={visibleCodes.includes(challenge.keycode) ? 'visible' : 'invisible'} onClick={(e) => { toggleCode(e, challenge.keycode)}}>{challenge.keycode}</h3>\n                                                <Copy onClick={(e) => { copyCode(e, challenge.keycode)} } />\n                                            </li>\n                                        </ul>\n                                    ))}\n                                </section>\n                            </li>\n                            <ModalComponent \n                                modalIsOpen={openModal === group.id}\n                                afterOpenModal={null}\n                                closeModal={closeModal}\n                                customStyles={customStyles}\n                                contentLabel=\"Edit group\"\n                            >\n                                <div className=\"editGroup\">\n                                    <section className=\"groupSection\">\n                                        <div className=\"groupImage\">\n                                            <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                                        </div>\n                                        <div>\n                                            <input type=\"text\" placeholder={group.name} />\n                                            <input type=\"text\" placeholder={group.class} />\n                                        </div>\n                                    </section>   \n                                    <ul className=\"editStudents\">\n                                        {group.students.map((student, idx) => (\n                                            <li key={idx}>\n                                                <input type=\"number\" placeholder={student.student_number} />   \n                                                <input type=\"text\" placeholder={student.name} />\n                                                <button onClick={() => { removeStudent(student.student_number, group.id) }}>X</button>\n                                            </li>\n                                        ))}\n                                        {newStudents.map((student, idx) => (\n                                            <li key={idx}>\n                                                <input type=\"number\" placeholder={student.student_number} />   \n                                                <input type=\"text\" placeholder={student.name} />\n                                                <button onClick={() => { setNewStudents(newStudents.filter((_, i) => i !== idx)) }}>X</button>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    <button onClick={() => { setNewStudents([ ...newStudents, { name: '', student_number: '' }]) }}>Student toevoegen</button>\n                                </div>\n                            </ModalComponent>\n                        </>\n                    ))}\n                </ul>                \n            </section>\n        </>\n    );\n}\n\nexport default Groups;","\n\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport dataLayer, { checkSession } from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]); \n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n  const [isTeacher, setIsTeacher] = useState(false);\n\n  // Check if user is logged in as a teacher\n  useEffect(() => {\n    checkSession().then(isTeacher => {\n      setIsTeacher(isTeacher);\n      if (!isTeacher) {\n        navigate('/');\n      }\n    });\n  }, []);\n\n  // Fetch groups and students\n  useEffect(() => {\n    if (isTeacher) {\n      const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n      };\n      fetchData();\n    }\n  }, [isTeacher]);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n        const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n        return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n      group.students.some(student =>\n        student.name.toLowerCase().includes(searchQueryStudent)\n      ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (    \n    <>\n      {isTeacher && (\n        <main>\n          <Filter \n            filters={filters}\n            setFilters={setFilters}\n          />\n          <Groups\n            groups={filteredGroups}\n          />\n        </main>\n      )}    \n    </>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["api","login","async","response","fetch","method","body","formData","credentials","responseText","text","ok","Error","status","loginResponse","JSON","parse","error","console","log","message","getStudents","groupId","json","getChallenges","getChallenge","challengeId","checkSession","userData","groupsData","groups","getGroups","length","group","dataRow","students","id","challenges","challenge","challenge_id","then","data","name","minimum_points","time_limit","catch","push","warn","fetchAllData","filters","setFilters","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","onClick","navigate","logout","modalIsOpen","afterOpenModal","closeModal","customStyles","contentLabel","children","isClient","setIsClient","useState","useEffect","isOpen","onAfterOpen","onRequestClose","style","className","height","viewBox","fill","xmlns","d","stroke","apiUrl","openModal","setOpenModal","newStudents","setNewStudents","visibleCodes","setVisibleCodes","content","top","left","right","bottom","marginRight","transform","map","idx","key","modalName","src","image_url","alt","class","student","student_number","completed","includes","keycode","event","code","filter","c","stopPropagation","navigator","clipboard","writeText","Modal","studentNumber","_","i","setGroups","filteredGroups","setFilteredGroups","isTeacher","setIsTeacher","dataLayer","fetchData","searchQueryGroup","toLowerCase","searchedGroups","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}