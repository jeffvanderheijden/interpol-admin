{"version":3,"file":"component---src-pages-dashboard-js-52f62238cd02847c9890.js","mappings":"oMA0EA,MA1EkB,KACd,IAAIA,EAAa,GAEjB,MAUMC,EAAcC,UAChB,IACI,MAAMC,QAAiBC,MAAM,2DAA2DC,GACxF,aAAaF,EAASG,MAC1B,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAMA,GACP,EACX,GAGEE,EAAgBP,UAClB,IACI,MAAMC,QAAiBC,MAAM,6DAA6DC,GAC1F,aAAaF,EAASG,MAC1B,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAMA,GACP,EACX,GAGEG,EAAeR,UACjB,IACI,MAAMC,QAAiBC,MAAM,yDAAyDO,GACtF,aAAaR,EAASG,MAC1B,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAMA,GACP,EACX,GA+BJ,MA5BqBL,WACjB,MAAMU,OAzCQV,WACd,IACI,MAAMC,QAAiBC,MAAM,6CAC7B,aAAaD,EAASG,MAC1B,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAMA,GACP,EACX,GAkCqBM,GAErB,IAAK,MAAMC,KAASF,EAAQ,CACxB,IAAIG,EAAUD,EAEd,MAAME,QAAiBf,EAAYa,EAAMG,IACzCF,EAAQC,SAAWA,EAEnB,MAAME,QAAmBT,EAAcK,EAAMG,IAE7C,IAAK,MAAME,KAAaD,QACdR,EAAaS,EAAUC,cACxBC,MAAKC,IACFd,QAAQe,IAAID,GACZH,EAAgB,KAAIG,EAAK,GAAGE,KAC5BL,EAA0B,eAAIG,EAAK,GAAGG,eACtCN,EAAsB,WAAIG,EAAK,GAAGI,UAAU,IAC7CC,OAAMpB,GAASC,QAAQD,MAAMA,KAExCQ,EAAQG,WAAaA,EAErBlB,EAAW4B,KAAKb,EACpB,CAEA,OAAOf,CAAU,EAGd6B,EAAc,EC3CzB,MAzBe,IAGR,IAHS,QACZC,EAAO,WACPC,GACH,EAcG,OACI,2BAASd,GAAG,UACR,yBAAOe,KAAK,OAAOC,YAAY,sBAAsBC,SAAWC,IAfnDA,KACjBJ,EAAW,IACJD,EACHM,YAAaD,EAAEE,OAAOC,OACxB,EAW0EF,CAAYD,EAAE,EAAIG,MAAOR,EAAQM,cACzG,yBAAOJ,KAAK,OAAOC,YAAY,wBAAwBC,SAAWC,IATnDA,KACnBJ,EAAW,IACJD,EACHS,cAAeJ,EAAEE,OAAOC,OAC1B,EAK4EC,CAAcJ,EAAE,EAAIG,MAAOR,EAAQS,gBACvG,EC0ClB,MA/De,IAER,IAFS,OACZ3B,GACH,EAKG,OACI,2BAASK,GAAG,UACR,sBAAIA,GAAG,cACFL,GAAUA,EAAO4B,KAAI,CAAC1B,EAAO2B,IAC1B,sBAAIC,UAAU,QAAQC,IAAKF,GACvB,2BAASC,UAAU,gBACf,uBAAKA,UAAU,cACX,uBAAKE,IATlB,kCASmC9B,EAAM+B,UAAaC,IAAKhC,EAAMU,QAExD,2BACI,0BAAKV,EAAMU,MACX,yBAAIV,EAAMiC,SAIlB,2BAASL,UAAU,mBACf,0BACK5B,EAAME,SAASwB,KAAI,CAACQ,EAASP,IAC1B,sBAAIE,IAAKF,GACL,yBAAIO,EAAQC,gBACZ,yBAAID,EAAQxB,WAK5B,2BAASkB,UAAU,qBACd5B,EAAMI,WAAWsB,KAAI,CAACrB,EAAWsB,IAC9B,sBAAIE,IAAKF,GACL,0BACI,0BAAKtB,EAAUK,MACf,2BACKL,EAAU+B,UACP,4BAAM,KACN,4BAAM,WAO9B,2BAASR,UAAU,iBACd5B,EAAMI,WAAWsB,KAAI,CAACrB,EAAWsB,IAC9B,sBAAIE,IAAKF,GACL,0BACI,0BAAKtB,EAAUgC,kBAQrC,ECDlB,MArDsB,KACpB,MAAM,EAACvC,EAAO,EAACwC,IAAaC,EAAAA,EAAAA,UAAS,KAC/B,EAACC,EAAe,EAACC,IAAqBF,EAAAA,EAAAA,UAAS,KAC/C,EAACvB,EAAQ,EAACC,IAAcsB,EAAAA,EAAAA,UAAS,CAAEjB,YAAa,GAAIG,cAAe,KAqCzE,OAnCAiB,EAAAA,EAAAA,YAAU,KACUtD,WACd,MAAMoB,QAAamC,IACnBL,EAAU9B,GACViC,EAAkBjC,EAAK,EAE3BoC,EAAW,GACV,KAGHF,EAAAA,EAAAA,YAAU,KACRzB,EAAW,IAAKD,EAASS,cAAe,KACxC,MAAMoB,EAAmB7B,EAAQM,YAAYwB,cAEvCC,EAAiBjD,EAAOkD,QAAOhD,GACRA,EAAMU,KAAKoC,cAAcG,SAASJ,KAI/DJ,EAAkBM,EAAe,GAChC,CAAC/B,EAAQM,eAGZoB,EAAAA,EAAAA,YAAU,KACRzB,EAAW,IAAKD,EAASM,YAAa,KACtC,MAAM4B,EAAqBlC,EAAQS,cAAcqB,cAE3CK,EAAiBrD,EAAOkD,QAAOhD,GACjCA,EAAME,SAASkD,MAAKlB,GAClBA,EAAQxB,KAAKoC,cAAcG,SAASC,OAG1CT,EAAkBU,EAAe,GAChC,CAACnC,EAAQS,gBAGV,4BACE,gBAAC,EAAM,CACLT,QAASA,EACTC,WAAYA,IAEd,gBAAC,EAAM,CACLnB,OAAQ0C,IAEL,EAMJ,MAAMa,EAAO,IAAM,6BAAO,c","sources":["webpack://admin-panel/./src/helpers/data/dataLayer.js","webpack://admin-panel/./src/components/Filter/Filter.js","webpack://admin-panel/./src/components/Groups/Groups.js","webpack://admin-panel/./src/pages/dashboard.js"],"sourcesContent":["const dataLayer = () => {\n    let groupsData = [];\n\n    const getGroups = async () => {\n        try {\n            const response = await fetch(\"https://api.interpol.sd-lab.nl/api/groups\");\n            return await response.json();\n        } catch (error) {\n            console.error(error);\n            return [];\n        }\n    };\n\n    const getStudents = async (groupId) => {\n        try {\n            const response = await fetch(`https://api.interpol.sd-lab.nl/api/students-by-group?id=${groupId}`);\n            return await response.json();\n        } catch (error) {\n            console.error(error);\n            return [];\n        }\n    };\n\n    const getChallenges = async (groupId) => {\n        try {\n            const response = await fetch(`https://api.interpol.sd-lab.nl/api/challenges-by-group?id=${groupId}`);\n            return await response.json();\n        } catch (error) {\n            console.error(error);\n            return [];\n        }\n    };\n\n    const getChallenge = async (challengeId) => {\n        try {\n            const response = await fetch(`https://api.interpol.sd-lab.nl/api/challenge-by-id?id=${challengeId}`);\n            return await response.json();\n        } catch (error) {\n            console.error(error);\n            return [];\n        }\n    }\n\n    const fetchAllData = async () => {\n        const groups = await getGroups();\n\n        for (const group of groups) {\n            let dataRow = group;\n\n            const students = await getStudents(group.id);\n            dataRow.students = students;\n\n            const challenges = await getChallenges(group.id);\n\n            for (const challenge of challenges) {\n                await getChallenge(challenge.challenge_id)\n                    .then(data => {\n                        console.log(data);\n                        challenge['name'] = data[0].name;\n                        challenge['minimum_points'] = data[0].minimum_points;\n                        challenge['time_limit'] = data[0].time_limit;\n                    }).catch(error => console.error(error));\n            }\n            dataRow.challenges = challenges;\n\n            groupsData.push(dataRow);\n        }\n\n        return groupsData;\n    };\n\n    return fetchAllData();\n}\n\nexport default dataLayer;","import React from \"react\";\nimport \"./Filter.css\";\n\nconst Filter = ({\n    filters,\n    setFilters\n}) => {\n    const searchGroup = (e) => {\n        setFilters({\n            ...filters,\n            searchGroup: e.target.value\n        })\n    }\n\n    const searchStudent = (e) => {\n        setFilters({\n            ...filters,\n            searchStudent: e.target.value\n        })\n    }\n    return (\n        <section id=\"filter\">\n            <input type=\"text\" placeholder=\"Zoek door groepen..\" onChange={(e) => { searchGroup(e) }} value={filters.searchGroup} />\n            <input type=\"text\" placeholder=\"Zoek door studenten..\" onChange={(e) => { searchStudent(e) }} value={filters.searchStudent} />\n        </section>\n    );\n}\n\nexport default Filter;","import React from \"react\";\nimport \"./Groups.css\";\n\nconst Groups = ({\n    groups\n}) => {\n\n    // Change on deployment\n    const apiUrl = \"https://api.interpol.sd-lab.nl/\";\n\n    return (\n        <section id=\"groups\">\n            <ul id=\"group-tabs\">\n                {groups && groups.map((group, idx) => (\n                    <li className=\"group\" key={idx}>\n                        <section className=\"groupSection\">\n                            <div className=\"groupImage\">\n                                <img src={`${apiUrl + group.image_url}`} alt={group.name} />\n                            </div>\n                            <div>\n                                <h2>{group.name}</h2>\n                                <p>{group.class}</p>\n                            </div>\n                        </section>\n                        {/* Todo add student compontent here. */}\n                        <section className=\"studentsSection\">\n                            <ul>\n                                {group.students.map((student, idx) => (\n                                    <li key={idx}>\n                                        <p>{student.student_number}</p>\n                                        <p>{student.name}</p>                                        \n                                    </li>\n                                ))}\n                            </ul>\n                        </section>\n                        <section className=\"challengesSection\">\n                            {group.challenges.map((challenge, idx) => (\n                                <ul key={idx}>\n                                    <li>\n                                        <h3>{challenge.name}</h3>\n                                        <div>\n                                            {challenge.completed ? \n                                                <span>V</span> : \n                                                <span>X</span>\n                                            }\n                                        </div>\n                                    </li>\n                                </ul>\n                            ))}\n                        </section>\n                        <section className=\"challengeKeys\">\n                            {group.challenges.map((challenge, idx) => (\n                                <ul key={idx}>\n                                    <li>\n                                        <h3>{challenge.keycode}</h3>\n                                    </li>\n                                </ul>\n                            ))}\n                        </section>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nexport default Groups;","\n\nimport React, { useState, useEffect } from \"react\";\nimport dataLayer from \"../helpers/data/dataLayer\";\nimport \"./../helpers/styles/reset.css\";\nimport Filter from \"../components/Filter/Filter\";\nimport Groups from \"../components/Groups/Groups\";\n\nconst DashboardPage = () => {\n  const [groups, setGroups] = useState([]); \n  const [filteredGroups, setFilteredGroups] = useState([]);\n  const [filters, setFilters] = useState({ searchGroup: '', searchStudent: '' });\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const data = await dataLayer();\n        setGroups(data);\n        setFilteredGroups(data);\n    };\n    fetchData();\n  }, []);\n\n  // Searches for groups\n  useEffect(() => {\n    setFilters({ ...filters, searchStudent: '' });\n    const searchQueryGroup = filters.searchGroup.toLowerCase();\n\n    const searchedGroups = groups.filter(group => {\n        const groupNameMatches = group.name.toLowerCase().includes(searchQueryGroup);\n        return groupNameMatches;\n    });\n\n    setFilteredGroups(searchedGroups);\n  }, [filters.searchGroup]);\n\n  // Searches for students\n  useEffect(() => {\n    setFilters({ ...filters, searchGroup: '' });\n    const searchQueryStudent = filters.searchStudent.toLowerCase();\n\n    const studentMatches = groups.filter(group => (\n        group.students.some(student =>\n          student.name.toLowerCase().includes(searchQueryStudent)\n        ))\n    );\n    setFilteredGroups(studentMatches);\n  }, [filters.searchStudent]);\n\n  return (\n    <main>\n      <Filter \n        filters={filters}\n        setFilters={setFilters}\n      />\n      <Groups\n        groups={filteredGroups}\n      />\n    </main>\n  )\n}\n\nexport default DashboardPage\n\nexport const Head = () => <title>Admin panel</title>\n"],"names":["groupsData","getStudents","async","response","fetch","groupId","json","error","console","getChallenges","getChallenge","challengeId","groups","getGroups","group","dataRow","students","id","challenges","challenge","challenge_id","then","data","log","name","minimum_points","time_limit","catch","push","fetchAllData","filters","setFilters","type","placeholder","onChange","e","searchGroup","target","value","searchStudent","map","idx","className","key","src","image_url","alt","class","student","student_number","completed","keycode","setGroups","useState","filteredGroups","setFilteredGroups","useEffect","dataLayer","fetchData","searchQueryGroup","toLowerCase","searchedGroups","filter","includes","searchQueryStudent","studentMatches","some","Head"],"sourceRoot":""}